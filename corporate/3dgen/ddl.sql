/*
This file is part of Giswater 3
The program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This version of Giswater is provided by Giswater Association
*/

SET search_path = "SCHEMA_NAME", public;

drop view if exists v_arc_3d;
CREATE OR REPLACE view v_arc_3d as
SELECT arc_id,
    code,
    node_1,
    node_2,
    elevation1,
    depth1,
    elevation2,
    depth2,
    arccat_id,
    arc_type,
    sys_type,
    cat_matcat_id,
    cat_pnom,
    cat_dnom,
    epa_type,
    expl_id,
    macroexpl_id,
    sector_id,
    sector_name,
    macrosector_id,
    state,
    state_type,
    annotation,
    observ,
    comment,
    gis_length,
    custom_length,
    minsector_id,
    dma_id,
    dma_name,
    macrodma_id,
    presszone_id,
    presszone_name,
    dqa_id,
    dqa_name,
    macrodqa_id,
    soilcat_id,
    function_type,
    category_type,
    fluid_type,
    location_type,
    workcat_id,
    workcat_id_end,
    buildercat_id,
    builtdate,
    enddate,
    ownercat_id,
    muni_id,
    postcode,
    district_id,
    streetname,
    postnumber,
    postcomplement,
    streetname2,
    postnumber2,
    postcomplement2,
    descript,
    link,
    verified,
    undelete,
    label,
    label_x,
    label_y,
    label_rotation,
    publish,
    inventory,
    num_value,
    cat_arctype_id,
    nodetype_1,
    staticpress1,
    nodetype_2,
    staticpress2,
    tstamp,
    insert_user,
    lastupdate,
    lastupdate_user,
    depth,
    adate,
    adescript,
    dma_style,
    presszone_style,
    workcat_id_plan,
    asset_id,
    pavcat_id,
    the_geom3d FROM v_arc 
JOIN
(
WITH j AS (
  SELECT arc_id , ST_setsrid(ST_MakeLine(j.pointz), 5367) AS the_geom3d
  FROM (
  SELECT arc_id,
  	 ST_linelocatepoint(the_geom, (ST_DumpPoints(the_geom)).geom) as locate,
         ST_MakePoint(ST_X((ST_DumpPoints(the_geom)).geom), ST_Y((ST_DumpPoints(the_geom)).geom),
         (elevation1 + (elevation2 - elevation1)*(ST_linelocatepoint(the_geom, (ST_DumpPoints(the_geom)).geom)))
         ) AS pointz
  FROM v_arc ORDER BY arc_id,the_geom
  )j
  group by arc_id
  )
  select * from  j)a USING (arc_id);

drop view if exists v_node_3d;
CREATE OR REPLACE view v_node_3d as
SELECT 	node_id,
    code,
    elevation,
    depth,
    node_type,
    sys_type,
    nodecat_id,
    cat_matcat_id,
    cat_pnom,
    cat_dnom,
    epa_type,
    expl_id,
    macroexpl_id,
    sector_id,
    sector_name,
    macrosector_id,
    arc_id,
    parent_id,
    state,
    state_type,
    annotation,
    observ,
    comment,
    minsector_id,
    dma_id,
    dma_name,
    macrodma_id,
    presszone_id,
    presszone_name,
    staticpressure,
    dqa_id,
    dqa_name,
    macrodqa_id,
    soilcat_id,
    function_type,
    category_type,
    fluid_type,
    location_type,
    workcat_id,
    workcat_id_end,
    builtdate,
    enddate,
    buildercat_id,
    ownercat_id,
    muni_id,
    postcode,
    district_id,
    streetname,
    postnumber,
    postcomplement,
    streetname2,
    postnumber2,
    postcomplement2,
    descript,
    svg,
    rotation,
    link,
    verified,
    undelete,
    label,
    label_x,
    label_y,
    label_rotation,
    publish,
    inventory,
    hemisphere,
    num_value,
    nodetype_id,
    tstamp,
    insert_user,
    lastupdate,
    lastupdate_user,
    adate,
    adescript,
    accessibility,
    dma_style,
    presszone_style,
    workcat_id_plan,
    asset_id, 
    ST_setsrid(ST_MakePoint(ST_X(the_geom), ST_Y(the_geom), elevation), 5367)  as the_geom3d FROM v_node;

    grant all on v_arc_3d to role_basic;
    grant all on v_node_3d to role_basic;