/*
Copyright Â© 2023 by BGEO. All rights reserved.
The program is free software: you can redistribute it and/or modify it under the terms of the GNU
General Public License as published by the Free Software Foundation, either version 3 of the License,
or (at your option) any later version.
*/



CREATE VIEW audit.v_fidlog_aux AS
SELECT tstamp::date as date, (json_array_elements_text((a.source->>'expl_id')::json))::integer as expl_id, fprocess_type as type, fprocess_name, criticity, fcount as value
FROM audit.audit_fid_log a LEFT JOIN  SCHEMA_NAME.sys_fprocess  USING (fid) 
where isaudit is true
order by 1,2,3


CREATE VIEW audit.v_fidlog_aux_ws AS
SELECT * FROM 
(SELECT tstamp::date as date, (json_array_elements_text((a.source->>'expl_id')::json))::integer as expl_id,
((a.source->>'schema')::text) as schema,
fprocess_type as type, fprocess_name, criticity, fcount as value
FROM audit.audit_fid_log a LEFT JOIN  SCHEMA_NAME.sys_fprocess  USING (fid) 
where isaudit is true )a
WHERE schema::text='ws'
order by 1,2,3;

CREATE VIEW audit.v_fidlog_aux_ud AS
SELECT * FROM 
(SELECT tstamp::date as date, (json_array_elements_text((a.source->>'expl_id')::json))::integer as expl_id,
((a.source->>'schema')::text) as schema,
fprocess_type as type, fprocess_name, criticity, fcount as value
FROM audit.audit_fid_log a LEFT JOIN  SCHEMA_NAME.sys_fprocess  USING (fid) 
where isaudit is true )a
WHERE schema::text='ud'
order by 1,2,3;



CREATE OR REPLACE VIEW audit.v_fidlog AS 
 SELECT ct.date,
    'WARNING' AS criticity,
    ct.omdata,
    ct.omtopology,
    ct.grafdata,
    ct.epaconfig,
    ct.epadata,
    ct.epatopology,
    ct.planconfig,
    COALESCE(ct.omdata, 0) + COALESCE(ct.omtopology, 0) +COALESCE(ct.grafdata, 0) + COALESCE(ct.epaconfig, 0) + COALESCE(ct.epadata, 0) + COALESCE(ct.epatopology, 0) + COALESCE(ct.planconfig, 0) AS total,
    (ct.length::numeric / 1000::numeric)::numeric(12,1) AS km,
    (100000::numeric * (COALESCE(ct.omdata, 0) + COALESCE(ct.omtopology, 0) +COALESCE(ct.grafdata, 0) + COALESCE(ct.epaconfig, 0) + COALESCE(ct.epadata, 0) + COALESCE(ct.epatopology, 0) + COALESCE(ct.planconfig, 0))::numeric / ct.length::numeric)::integer AS index
   FROM crosstab('
SELECT date, type, value FROM audit.v_fidlog where criticity in (0,2)
'::text, 'VALUES (''Check om-data''), (''Check om-topology''), (''Check graf-data''),(''Check epa-config''), (''Check epa-data''),(''Check epa-topology''), (''Check plan-config''),(''length'')'::text) 
ct(date date, omdata integer, omtopology integer, grafdata integer, epaconfig integer, epadata integer, epatopology integer, planconfig integer, length integer)
UNION
 SELECT ct.date,
    'ERROR' AS criticity,
    ct.omdata,
    ct.omtopology,
    ct.grafdata,
    ct.epaconfig,
    ct.epadata,
    ct.epatopology,
    ct.planconfig,
    COALESCE(ct.omdata, 0) + COALESCE(ct.omtopology, 0) +COALESCE(ct.grafdata, 0) + COALESCE(ct.epaconfig, 0) + COALESCE(ct.epadata, 0) + COALESCE(ct.epatopology, 0) + COALESCE(ct.planconfig, 0) AS total,
    (ct.length::numeric / 1000::numeric)::numeric(12,1) AS km,
    (100000::numeric * (COALESCE(ct.omdata, 0) + COALESCE(ct.omtopology, 0) +COALESCE(ct.grafdata, 0) + COALESCE(ct.epaconfig, 0) + COALESCE(ct.epadata, 0) + COALESCE(ct.epatopology, 0) + COALESCE(ct.planconfig, 0))::numeric / ct.length::numeric)::integer AS index
   FROM crosstab('
SELECT date, type, value FROM audit.v_fidlog where criticity in (0,3)
'::text, 'VALUES (''Check om-data''), (''Check om-topology''), (''Check graf-data''),(''Check epa-config''), (''Check epa-data''),(''Check epa-topology''), (''Check plan-config''),(''length'')'::text) 
ct(date date, omdata integer, omtopology integer, grafdata integer, epaconfig integer, epadata integer, epatopology integer, planconfig integer, length integer)
  ORDER BY 1, 2, 3, 4;

GRANT ALL ON TABLE audit.v_fidlog TO role_master;





  
  