/*
This file is part of Giswater 3
The program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This version of Giswater is provided by Giswater Association
*/

SET search_path = SCHEMA_NAME, public, pg_catalog;

UPDATE config_toolbox SET alias='Check arcs without node start/end', functionparams='{"featureType":["arc"]}'::json, inputparams='[{"label": "Start/end points buffer", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "arcSearchNodes", "widgettype": "text", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2102;
UPDATE config_toolbox SET alias='Check arcs with same start/end node', functionparams='{"featureType":["arc"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2104;
UPDATE config_toolbox SET alias='Check connecs duplicated', functionparams='{"featureType":["connec"]}'::json, inputparams='[{"label": "Node tolerance:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "connecTolerance", "widgettype": "spinbox", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2106;
UPDATE config_toolbox SET alias='Check nodes duplicated', functionparams='{"featureType":["node"]}'::json, inputparams='[{"label": "Node tolerance:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeTolerance", "widgettype": "spinbox", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4,5}' WHERE id=2108;
UPDATE config_toolbox SET alias='Check nodes orphan', functionparams='{"featureType":["node"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2110;
UPDATE config_toolbox SET alias='Build nodes using arcs start & end vertices', functionparams='{"featureType":["arc"]}'::json, inputparams='[{"label": "Direct insert into node table:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "insertIntoNode", "widgettype": "check", "layoutorder": 1}, {"label": "Node tolerance:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeTolerance", "widgettype": "spinbox", "layoutorder": 2}, {"label": "Exploitation ids:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "select expl_id as id, name as idval from exploitation where active is not false order by name", "layoutorder": 3}, {"label": "State:", "value": null, "datatype": "integer", "isparent": "true", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "stateType", "widgettype": "combo", "dvQueryText": "select value_state_type.id as id, concat(''state: '',value_state.name,'' state type: '', value_state_type.name) as idval from value_state_type join value_state on value_state.id = state where value_state_type.id is not null order by  CASE WHEN state=1 THEN 1 WHEN state=2 THEN 2 WHEN state=0 THEN 3 END, id", "layoutorder": 4}, {"label": "Workcat:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "workcatId", "widgettype": "combo", "dvQueryText": "select id as id, id as idval from cat_work where id is not null union select null as id, null as idval order by id", "isNullValue": false, "layoutorder": 5}, {"label": "Builtdate:", "value": null, "datatype": "date", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "builtdate", "widgettype": "datetime", "layoutorder": 6}, {"label": "Node type:", "value": null, "datatype": "text", "iseditable": false, "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeType", "widgettype": "combo", "dvQueryText": "select distinct id as id, id as idval from cat_feature_node where id is not null", "layoutorder": 7}, {"label": "Node catalog:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeCat", "widgettype": "combo", "dvQueryText": "select distinct id as id, id as idval from cat_node where nodetype_id = $userNodetype  OR nodetype_id is null order by id", "layoutorder": 8}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2118;
UPDATE config_toolbox SET alias='Check node topological consistency', functionparams='{"featureType":["node"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2302;
UPDATE config_toolbox SET alias='Check data according to EPA rules', functionparams='{"featureType":[]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2430;
UPDATE config_toolbox SET alias='Check plan data', functionparams='{"featureType":[]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2436;
UPDATE config_toolbox SET alias='Reconnect arcs with closest nodes', functionparams='{"featureType":["arc"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2496;
UPDATE config_toolbox SET alias='Import epanet file', functionparams='{"featureType":[]}'::json, inputparams=NULL, observ=NULL, active=false, device='{4}' WHERE id=2522;
UPDATE config_toolbox SET alias='Check data for o&m process', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Selection mode:", "value": null, "comboIds": ["userSelectors"], "datatype": "text", "comboNames": ["Users selection (expl & state & psector)"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "selectionMode", "widgettype": "combo", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2670;
UPDATE config_toolbox SET alias='Minsector analysis', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation id:", "value": null, "datatype": "json", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "text", "layoutorder": 1, "placeholder": "1,2"}, {"label": "Use masterplan psectors:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "usePsectors", "widgettype": "check", "layoutorder": 6}, {"label": "Commit changes:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "commitChanges", "widgettype": "check", "layoutorder": 7}, {"label": "Update mapzone geometry method:", "value": null, "comboIds": [0, 1, 2, 3], "datatype": "integer", "comboNames": ["NONE", "CONCAVE POLYGON", "PIPE BUFFER", "PLOT & PIPE BUFFER"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "updateMapZone", "widgettype": "combo", "layoutorder": 8}, {"label": "Geometry parameter:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "geomParamUpdate", "widgettype": "text", "isMandatory": false, "layoutorder": 10, "placeholder": "5-30"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2706;
UPDATE config_toolbox SET alias='Massive mincut analysis', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation id''s:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "text", "layoutorder": 1, "placeholder": "[1,2]"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2712;
UPDATE config_toolbox SET alias='Get values from raster DEM', functionparams='{"featureType":["node","connec"]}'::json, inputparams='[{"label": "Values to update:", "value": null, "comboIds": ["allValues", "nullValues"], "datatype": "text", "comboNames": ["ALL VALUES", "NULL ELEVATION VALUES"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "updateValues", "widgettype": "combo", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2760;
UPDATE config_toolbox SET alias='Mapzones analysis', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Graph class:", "value": null, "tooltip": "Graphanalytics method used", "comboIds": ["PRESSZONE", "DQA", "DMA", "SECTOR"], "datatype": "text", "comboNames": ["Pressure Zonification (PRESSZONE)", "District Quality Areas (DQA) ", "District Metering Areas (DMA)", "Inlet Sectorization (SECTOR-HIGH / SECTOR-LOW)"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "graphClass", "widgettype": "combo", "layoutorder": 1}, {"label": "Exploitation:", "value": null, "tooltip": "Choose exploitation to work with", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "select id, idval from (select -999 as id, ''User selected expl'' AS idval, ''a'' AS sort_order union select expl_id as id, name as idval, ''b'' as sort_order from exploitation where active is not false)a order by sort_order asc, idval asc", "layoutorder": 2}, {"label": "Flood only one mapzone: (*)", "value": null, "tooltip": "Flood only identified mapzones. The purpose of this is update only network elements affected by this flooding keeping rest of network as is. Recommended to gain performance when mapzones ecosystem is under work", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "floodOnlyMapzone", "widgettype": "linetext", "isMandatory": false, "layoutorder": 3, "placeholder": "1001"}, {"label": "Force open nodes: (*)", "value": null, "tooltip": "Optative node id(s) to temporary open closed node(s) in order to force algorithm to continue there", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "forceOpen", "widgettype": "linetext", "isMandatory": false, "layoutorder": 5, "placeholder": "1015,2231,3123"}, {"label": "Force closed nodes: (*)", "value": null, "tooltip": "Optative node id(s) to temporary close open node(s) to force algorithm to stop there", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "forceClosed", "widgettype": "text", "isMandatory": false, "layoutorder": 6, "placeholder": "1015,2231,3123"}, {"label": "Use selected psectors:", "value": null, "tooltip": "If true, use selected psectors. If false ignore selected psectors and only works with on-service network", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "usePlanPsector", "widgettype": "check", "layoutorder": 7}, {"label": "Commit changes:", "value": null, "tooltip": "If true, changes will be applied to DB. If false, algorithm results will be saved in anl tables", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "commitChanges", "widgettype": "check", "layoutorder": 8}, {"label": "Value for disconn. and conflict: (*)", "value": null, "tooltip": "Value to use for disconnected features. Usefull for work in progress with dynamic mpzonesnode", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "valueForDisconnected", "widgettype": "linetext", "isMandatory": false, "layoutorder": 9, "placeholder": ""}, {"label": "Mapzone constructor method:", "value": null, "comboIds": [0, 1, 2, 3, 4], "datatype": "integer", "comboNames": ["NONE", "CONCAVE POLYGON", "PIPE BUFFER", "PLOT & PIPE BUFFER", "LINK & PIPE BUFFER"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "updateMapZone", "widgettype": "combo", "layoutorder": 10}, {"label": "Pipe buffer", "value": null, "tooltip": "Buffer from arcs to create mapzone geometry using [PIPE BUFFER] options. Normal values maybe between 3-20 mts.", "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "geomParamUpdate", "widgettype": "text", "isMandatory": false, "layoutorder": 11, "placeholder": "5-30"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2768;
UPDATE config_toolbox SET alias='Flow trace analytics', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Graph class:", "value": null, "comboIds": ["DISCONNECTEDARCS", "CONNECTEDARCS"], "datatype": "text", "comboNames": ["DISCONNECTED ARCS", "CONNECTED ARCS"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "graphClass", "widgettype": "combo", "layoutorder": 1}, {"label": "Node id:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeId", "widgettype": "text", "layoutorder": 2}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2772;
UPDATE config_toolbox SET alias='Check backend configuration', functionparams='{"featureType":[]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=2776;
UPDATE config_toolbox SET alias='Check data for graphanalytics process', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Graph class:", "value": null, "comboIds": ["PRESSZONE", "DQA", "DMA", "SECTOR"], "datatype": "text", "comboNames": ["Pressure Zonification (PRESSZONE)", "District Quality Areas (DQA) ", "District Metering Areas (DMA)", "Inlet Sectorization (SECTOR-HIGH / SECTOR-LOW)"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "graphClass", "widgettype": "combo", "layoutorder": 1}, {"label": "Selection mode:", "value": null, "comboIds": ["userSelectors"], "datatype": "text", "comboNames": ["Users selection (expl & state & psector)"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "selectionMode", "widgettype": "combo", "layoutorder": 2}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2790;
UPDATE config_toolbox SET alias='Linear Reference System', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation ids:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "select expl_id as id, name as idval from exploitation where active is not false order by name", "layoutorder": 2}]'::json, observ=NULL, active=false, device='{4}' WHERE id=2826;
UPDATE config_toolbox SET alias='Reconstruction cost & amortization values', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Result name:", "value": null, "datatype": "string", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "resultName", "widgettype": "text", "layoutorder": 1, "placeholder": "result name"}, {"label": "Step:", "value": null, "comboIds": ["1", "2"], "datatype": "text", "comboNames": ["STEP-1:RECONSTRUCTION COST", "STEP-2:AMORTIZATION VALUES"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "step", "widgettype": "combo", "layoutorder": 2}, {"label": "Coefficient:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "coefficient", "widgettype": "text", "layoutorder": 3, "placeholder": "1"}, {"label": "Description:", "value": null, "datatype": "string", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "ismandatory": false, "layoutorder": 4, "placeholder": "description"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2890;
UPDATE config_toolbox SET alias='Reset user profile', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "User name:", "value": null, "tooltip": "User name", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "user", "widgettype": "text", "layoutorder": 1}, {"label": "Copy from user (same role):", "value": null, "tooltip": "Optative user name to copy all values from it", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "fromUser", "widgettype": "text", "layoutorder": 2}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2922;
UPDATE config_toolbox SET alias='Config mapzones', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Graph class:", "value": null, "comboIds": ["DMA", "PRESSZONE", "SECTOR"], "datatype": "text", "comboNames": ["District Metering Areas (DMA)", "Pressure zones (PRESSZONE)", "Inlet sectors (SECTOR)"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "graphClass", "widgettype": "combo", "layoutorder": 1}, {"label": "Mapzone field name:", "value": null, "datatype": "string", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "mapzoneField", "widgettype": "text", "layoutorder": 2}]'::json, observ=NULL, active=false, device='{4}' WHERE id=2970;
UPDATE config_toolbox SET alias='User check data', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Check type:", "value": null, "comboIds": ["User"], "datatype": "text", "comboNames": ["User"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "checkType", "widgettype": "combo", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=2998;
UPDATE config_toolbox SET alias='Arc reverse', functionparams='{"featureType":["arc"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4}' WHERE id=3008;
UPDATE config_toolbox SET alias='Check arcs duplicated', functionparams='{"featureType":["arc"]}'::json, inputparams='[{"label": "Check type:", "value": null, "comboIds": ["geometry", "finalNodes"], "datatype": "text", "comboNames": ["GEOMETRY", "FINAL NODES"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "checkType", "widgettype": "combo", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4,5}' WHERE id=3040;
UPDATE config_toolbox SET alias='Manage Dscenario values', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Target:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "target", "widgettype": "combo", "dvQueryText": "SELECT dscenario_id as id, name as idval FROM cat_dscenario WHERE active IS TRUE", "layoutorder": 1}, {"label": "Action:", "value": null, "comboIds": ["DELETE-COPY", "KEEP-COPY", "DELETE-ONLY"], "datatype": "text", "comboNames": ["DELETE VALUES & COPY FROM", "KEEP VALUES & COPY FROM", "DELETE SCENARIO"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "action", "widgettype": "combo", "layoutorder": 2}, {"label": "Copy from:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "copyFrom", "widgettype": "combo", "dvQueryText": "SELECT dscenario_id as id, name as idval FROM cat_dscenario WHERE active IS TRUE", "layoutorder": 3}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3042;
UPDATE config_toolbox SET alias='Arcs shorter than specific length', functionparams='{"featureType":["arc"]}'::json, inputparams='[{"widgetname":"arcLength", "label":"Arc length:", "widgettype":"text","datatype":"string","layoutname":"grl_option_parameters","layoutorder":1}]'::json, observ=NULL, active=true, device='{4,5}' WHERE id=3052;
UPDATE config_toolbox SET alias='Repair nodes duplicated (one by one)', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Node:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "node", "widgettype": "text", "layoutorder": 1}, {"label": "Action:", "value": null, "comboIds": ["DELETE", "DOWNGRADE", "MOVE-LOSE-TOPO", "MOVE-KEEP-TOPO", "MOVE-GET-TOPO"], "datatype": "text", "comboNames": ["DELETE", "DOWNGRADE", "MOVE & LOSE TOPOLOGY", "MOVE & KEEP TOPOLOGY", "MOVE & GET TOPOLOGY"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "action", "widgettype": "combo", "layoutorder": 3}, {"label": "Target node (optional):", "value": null, "tooltip": "Value for target node is optative. If null system will try to check closest node.", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "targetNode", "widgettype": "text", "layoutorder": 2}, {"label": "Movement on X axis (m):", "value": null, "tooltip": "Node displacement on X axis (m)", "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "dx", "widgettype": "text", "layoutorder": 4}, {"label": "Movement on Y axis (m):", "value": null, "tooltip": "Node displacement on Y axis (m)", "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "dy", "widgettype": "text", "layoutorder": 5}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3080;
UPDATE config_toolbox SET alias='Create Network Dscenario from ToC', functionparams='{"featureType": {"node":["v_edit_inp_reservoir", "v_edit_inp_tank", "v_edit_inp_inlet", "v_edit_inp_junction", "v_edit_inp_shortpipe", "v_edit_inp_valve", "v_edit_inp_pump", "v_edit_inp_pump_additional"], "arc":["v_edit_inp_pipe", "v_edit_inp_virtualvalve", "v_edit_inp_virtualpump"], "connec":["v_edit_inp_connec"]}}'::json, inputparams='[{"label": "Scenario name:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "text", "layoutorder": 1}, {"label": "Scenario descript:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "layoutorder": 2}, {"label": "Scenario type:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "type", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM inp_typevalue where typevalue = ''inp_typevalue_dscenario''", "layoutorder": 3}, {"label": "Exploitation:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "SELECT expl_id as id, name as idval FROM v_edit_exploitation", "layoutorder": 4}, {"label": "Descript:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "layoutorder": 5}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3108;
UPDATE config_toolbox SET alias='Create Demand Dscenario from CRM', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Scenario name:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "text", "layoutorder": 1}, {"label": "Scenario descript:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "layoutorder": 2}, {"label": "Exploitation:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "SELECT expl_id as id, name as idval FROM exploitation where expl_id>0 UNION select 99999 as id, ''ALL'' as idval order by id desc", "layoutorder": 4}, {"label": "Choose time method:", "value": null, "comboIds": [1, 2], "datatype": "text", "comboNames": ["PERIOD ID", "DATE INTERVAL"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "patternOrDate", "widgettype": "combo", "isMandatory": true, "layoutorder": 5}, {"label": "if PERIOD_ID - Period:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "period", "widgettype": "combo", "dvQueryText": "SELECT id, code as idval FROM ext_cat_period", "layoutorder": 6}, {"label": "[if DATE INTERVAL] Source CRM init date:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "initDate", "widgettype": "datetime", "layoutorder": 7}, {"label": "[if DATE INTERVAL] Source CRM end date:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "endDate", "widgettype": "datetime", "layoutorder": 8}, {"label": "Only hydrometers with waterbal true:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "onlyIsWaterBal", "widgettype": "check", "layoutorder": 9}, {"label": "Feature pattern:", "value": null, "tooltip": "This value will be stored on pattern_id of inp_dscenario_demand table in order to be used on the inp file exportation ONLY with the pattern method FEATURE PATTERN.", "comboIds": [1, 2, 3, 4, 5, 6, 7], "datatype": "text", "comboNames": ["NONE", "SECTOR-DEFAULT", "DMA-DEFAULT", "DMA-PERIOD", "HYDROMETER-PERIOD", "HYDROMETER-CATEGORY", "FEATURE-PATTERN"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "pattern", "widgettype": "combo", "layoutorder": 10}, {"label": "Demand units:", "value": null, "tooltip": "Choose units to insert volume data on demand column. This value need to be the same that flow units used on EPANET. On the other hand, it is assumed that volume from hydrometer data table is expresed on m3/period and column period_seconds is filled.", "comboIds": ["LPS", "LPM", "MLD", "CMH", "CMD", "CFS", "GPM", "MGD", "AFD"], "datatype": "text", "comboNames": ["LPS", "LPM", "MLD", "CMH", "CMD", "CFS", "GPM", "MGD", "AFD"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "demandUnits", "widgettype": "combo", "layoutorder": 11}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3110;
UPDATE config_toolbox SET alias='Create Demand Dscenario from ToC', functionparams='{"featureType": {"node":["v_edit_inp_junction"],"connec":["v_edit_inp_connec"]}}'::json, inputparams='[{"label": "Scenario name:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "text", "layoutorder": 1}, {"label": "Scenario descript:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "layoutorder": 2}, {"label": "Exploitation:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "SELECT expl_id as id, name as idval FROM v_edit_exploitation", "layoutorder": 4}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3112;
UPDATE config_toolbox SET alias='Topocontrol for data migration', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Set topocontrol mode:", "value": null, "comboIds": ["TRUE", "FALSE"], "datatype": "text", "comboNames": ["MIGRATION", "WORK"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "action", "widgettype": "combo", "layoutorder": 1}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3130;
UPDATE config_toolbox SET alias='Create empty Dscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Name: (*)", "value": null, "tooltip": "Name for dscenario (mandatory)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 1, "placeholder": ""}, {"label": "Descript:", "value": null, "tooltip": "Descript for dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 2, "placeholder": ""}, {"label": "Parent:", "value": null, "tooltip": "Parent for dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "parent", "widgettype": "linetext", "isMandatory": false, "layoutorder": 3, "placeholder": ""}, {"label": "Type:", "value": null, "tooltip": "Dscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "type", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM inp_typevalue WHERE typevalue = ''inp_typevalue_dscenario''", "isMandatory": true, "layoutorder": 4}, {"label": "Active:", "value": null, "tooltip": "If true, active", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "active", "widgettype": "check", "layoutorder": 5}, {"label": "Exploitation:", "value": null, "tooltip": "Dscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id AS id, name as idval FROM v_edit_exploitation", "isMandatory": true, "layoutorder": 6}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3134;
UPDATE config_toolbox SET alias='Water balance by Exploitation and Period', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation:", "value": null, "tooltip": "Dscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "WITH aux AS (SELECT ''-9'' as id, ''ALL'' as idval, 0 AS rowid UNION SELECT expl_id::text as id, name as idval, row_number() over()+1 AS  rowid FROM exploitation where expl_id>0) SELECT id, idval FROM aux ORDER BY rowid ASC", "isMandatory": true, "layoutorder": 1}, {"label": "Method:", "value": null, "tooltip": "Water balance method", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "method", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM om_typevalue WHERE typevalue = ''waterbalance_method''", "isMandatory": true, "layoutorder": 2}, {"label": "    [if PERIOD_ID] Period:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "period", "widgettype": "combo", "dvQueryText": "SELECT id, code as idval FROM ext_cat_period ORDER BY id desc", "layoutorder": 4}, {"label": "    [if DATE INTERVAL] Period (init date):", "value": null, "tooltip": "Start date", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "initDate", "widgettype": "datetime", "isMandatory": true, "layoutorder": 5}, {"label": "    [if DATE INTERVAL] Period (end date):", "value": null, "tooltip": "End date", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "endDate", "widgettype": "datetime", "isMandatory": true, "layoutorder": 6}, {"label": "Execute DMA:", "value": null, "tooltip": "Execute DMA", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "executeGraphDma", "widgettype": "check", "isMandatory": true, "layoutorder": 7}]'::json, observ=NULL, active=true, device='{4,5}' WHERE id=3142;
UPDATE config_toolbox SET alias='Duplicate dscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Copy from:", "value": null, "signal": "manage_duplicate_dscenario_copyfrom", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "copyFrom", "widgettype": "combo", "dvQueryText": "SELECT dscenario_id as id, name as idval FROM cat_dscenario WHERE active IS TRUE", "layoutorder": 1}, {"label": "Name: (*)", "value": null, "tooltip": "Name for dscenario (mandatory)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 2, "placeholder": ""}, {"label": "Descript:", "value": null, "tooltip": "Descript for dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 3, "placeholder": ""}, {"label": "Parent:", "value": null, "tooltip": "Parent for dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "parent", "widgettype": "linetext", "isMandatory": false, "layoutorder": 4, "placeholder": ""}, {"label": "Type:", "value": null, "tooltip": "Dscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "type", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM inp_typevalue WHERE typevalue = ''inp_typevalue_dscenario''", "isMandatory": true, "layoutorder": 5}, {"label": "Active:", "value": null, "tooltip": "If true, active", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "active", "widgettype": "check", "layoutorder": 6}, {"label": "Exploitation:", "value": null, "tooltip": "Dscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id AS id, name as idval FROM v_edit_exploitation", "isMandatory": true, "layoutorder": 7}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3156;
UPDATE config_toolbox SET alias='Create valve dscenario from mincut', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Scenario name:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "text", "layoutorder": 1}, {"label": "Scenario descript:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "text", "layoutorder": 2}, {"label": "Mincut:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "mincutId", "widgettype": "combo", "dvQueryText": "SELECT id as id, id as idval FROM om_mincut", "layoutorder": 3}]'::json, observ='', active=true, device='{4}' WHERE id=3158;
UPDATE config_toolbox SET alias='Calculate the reach of hydrants', functionparams='{"featureType":["node"]}'::json, inputparams='[{"label": "Firehose range:", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "distance", "widgettype": "text", "layoutorder": "1"}, {"label": "Process mode:", "value": null, "comboIds": ["0", "1"], "datatype": "text", "comboNames": ["Influence area", "Hydrant proposal"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "mode", "widgettype": "combo", "layoutorder": "2"}, {"label": "Use proposed hydrants:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "useProposal", "widgettype": "check", "layoutorder": "3"}, {"label": "Use selected psectors:", "value": null, "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "usePsector", "widgettype": "check", "layoutorder": "4"}]'::json, observ='Function requires street data inserted on table om_streetaxis, where each street is divided into short lines between intersections.', active=true, device='{4,5}' WHERE id=3160;
UPDATE config_toolbox SET alias='Check nodes T candidates', functionparams='{"featureType":["node"]}'::json, inputparams=NULL, observ=NULL, active=true, device='{4,5}' WHERE id=3172;
UPDATE config_toolbox SET alias='Get address values from closest street number', functionparams='{"featureType":["node","connec"]}'::json, inputparams='[{"label": "Type:", "value": null, "comboIds": ["ALL NODES", "ALL CONNECS", "HYDRANT", "JUNCTION", "METER", "PUMP", "TANK", "VALVE", "WJOIN"], "datatype": "text", "comboNames": ["ALL NODES", "ALL CONNECS", "HYDRANT", "JUNCTION", "METER", "PUMP", "TANK", "VALVE", "WJOIN"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "catFeature", "widgettype": "combo", "layoutorder": 1}, {"label": "Field to update:", "value": null, "comboIds": ["postnumber", "postcomplement"], "datatype": "text", "comboNames": ["POSTNUMBER", "POSTCOMPLEMENT"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "fieldToUpdate", "widgettype": "combo", "layoutorder": 2}, {"label": "Search buffer (meters):", "value": null, "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "searchBuffer", "widgettype": "text", "isMandatory": true, "layoutorder": 3}, {"label": "Elements to update:", "value": null, "comboIds": ["allValues", "nullStreet", "nullPostnumber", "nullPostcomplement"], "datatype": "text", "comboNames": ["ALL ELEMENTS", "ELEMENTS WITH NULL STREETAXIS", "ELEMENTS WITH NULL POSTNUMBER", "ELEMENTS WITH NULL POSTCOMPLEMENT"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "updateValues", "widgettype": "combo", "layoutorder": 4}, {"label": "Intersect with polygon layer:", "value": null, "comboIds": ["NONE", "v_ext_plot"], "datatype": "text", "comboNames": ["NONE", "PLOT"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "insersectPolygonLayer", "widgettype": "combo", "layoutorder": 5}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3198;
UPDATE config_toolbox SET alias='Configuration of border features', functionparams='{"featureType":[]}'::json, inputparams='[{"widgetname":"configZone", "label":"Configurate zone:","widgettype":"combo","datatype":"text","layoutname":"grl_option_parameters","layoutorder":1, "comboIds":["SECTOR"], "comboNames":["SECTOR"]}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3204;
UPDATE config_toolbox SET alias='Show current mincuts', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation:", "value": null, "tooltip": "Exploitation", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "explId", "widgettype": "combo", "dvQueryText": "select expl_id as id, name as idval from exploitation where active is not false order by name", "layoutorder": 2}]'::json, observ=NULL, active=true, device='{4,5}' WHERE id=3236;
UPDATE config_toolbox SET alias='Mapzones Netscenario analysis', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Create mapzones for netscenario:", "value": null, "tooltip": "Create mapzone for a selected netscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "netscenario", "widgettype": "combo", "dvQueryText": "select netscenario_id as id, name as idval from plan_netscenario  order by name", "isNullValue": "true", "layoutorder": 1}, {"label": "Exploitation:", "value": null, "tooltip": "Choose exploitation to work with", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "exploitation", "widgettype": "combo", "dvQueryText": "select -999 as id, ''EXCEED EXPL BORDERS'' as idval UNION select 0 as id, ''DO NOT EXCEED EXPL BORDERS'' as idval", "layoutorder": 2}, {"label": "Flood only one mapzone: (*)", "value": null, "tooltip": "Flood only identified mapzones. The purpose of this is update only network elements affected by this flooding keeping rest of network as is. Recommended to gain performance when mapzones ecosystem is under work", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "floodOnlyMapzone", "widgettype": "linetext", "isMandatory": false, "layoutorder": 4, "placeholder": "1001"}, {"label": "Force open nodes: (*)", "value": null, "tooltip": "Optative node id(s) to temporary open closed node(s) in order to force algorithm to continue there", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "forceOpen", "widgettype": "linetext", "isMandatory": false, "layoutorder": 5, "placeholder": "1015,2231,3123"}, {"label": "Force closed nodes: (*)", "value": null, "tooltip": "Optative node id(s) to temporary close open node(s) to force algorithm to stop there", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "forceClosed", "widgettype": "text", "isMandatory": false, "layoutorder": 6, "placeholder": "1015,2231,3123"}, {"label": "Use selected psectors:", "value": null, "tooltip": "If true, use selected psectors. If false ignore selected psectors and only works with on-service network", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "usePlanPsector", "widgettype": "check", "layoutorder": 8}, {"label": "Mapzone constructor method:", "value": null, "comboIds": [0, 1, 2, 3, 4], "datatype": "integer", "comboNames": ["NONE", "CONCAVE POLYGON", "PIPE BUFFER", "PLOT & PIPE BUFFER", "LINK & PIPE BUFFER"], "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "updateMapZone", "widgettype": "combo", "layoutorder": 9}, {"label": "Pipe buffer", "value": null, "tooltip": "Buffer from arcs to create mapzone geometry using [PIPE BUFFER] options. Normal values maybe between 3-20 mts.", "datatype": "float", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "geomParamUpdate", "widgettype": "text", "isMandatory": false, "layoutorder": 10, "placeholder": "5-30"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3256;
UPDATE config_toolbox SET alias='Set pattern values on demand dscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Source netscenario:", "value": null, "tooltip": "Select mapzone dscenario from where data will be copied to demand dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "netscenario", "widgettype": "combo", "dvQueryText": "select netscenario_id as id, name as idval from plan_netscenario where netscenario_type =''DMA'' order by name", "isNullValue": "true", "layoutorder": 1}, {"label": "Target dscenario demand:", "value": null, "tooltip": "Select demand dscenario where data will be inserted", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "dscenario_demand", "widgettype": "combo", "dvQueryText": "select dscenario_id as id, name as idval from cat_dscenario where dscenario_type =''DEMAND'' order by name", "isNullValue": "true", "layoutorder": 3}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3258;
UPDATE config_toolbox SET alias='Create empty Netscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Name: (*)", "value": null, "tooltip": "Name for netscenario (mandatory)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 1, "placeholder": ""}, {"label": "Descript:", "value": null, "tooltip": "Descript for netscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 2, "placeholder": ""}, {"label": "Type:", "value": null, "tooltip": "netscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "type", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM plan_typevalue WHERE typevalue = ''netscenario_type''", "isMandatory": true, "layoutorder": 4}, {"label": "Active:", "value": null, "tooltip": "If true, active", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "active", "widgettype": "check", "layoutorder": 5}, {"label": "Exploitation:", "value": null, "tooltip": "netscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id AS id, name as idval FROM v_edit_exploitation", "isMandatory": true, "layoutorder": 6}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3260;
UPDATE config_toolbox SET alias='Create Netscenario from ToC', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Name: (*)", "value": null, "tooltip": "Name for netscenario (mandatory)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 1, "placeholder": ""}, {"label": "Descript:", "value": null, "tooltip": "Descript for netscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 2, "placeholder": ""}, {"label": "Type:", "value": null, "tooltip": "netscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "type", "widgettype": "combo", "dvQueryText": "SELECT id, idval FROM plan_typevalue WHERE typevalue = ''netscenario_type''", "isMandatory": true, "layoutorder": 4}, {"label": "Active:", "value": null, "tooltip": "If true, active", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "active", "widgettype": "check", "layoutorder": 5}, {"label": "Exploitation:", "value": null, "tooltip": "netscenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id AS id, name as idval FROM v_edit_exploitation", "isMandatory": true, "layoutorder": 6}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3262;
UPDATE config_toolbox SET alias='Duplicate Netscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Copy from:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "copyFrom", "widgettype": "combo", "dvQueryText": "SELECT netscenario_id as id, name as idval FROM plan_netscenario WHERE active IS TRUE", "layoutorder": 0}, {"label": "Name: (*)", "value": null, "tooltip": "Name for netscenario (mandatory)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 1, "placeholder": ""}, {"label": "Descript:", "value": null, "tooltip": "Descript for netscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 2, "placeholder": ""}, {"label": "Parent:", "value": null, "tooltip": "Parent for netscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "parent", "widgettype": "linetext", "isMandatory": false, "layoutorder": 3, "placeholder": ""}, {"label": "Active:", "value": null, "tooltip": "If true, active", "datatype": "boolean", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "active", "widgettype": "check", "layoutorder": 5}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3264;
UPDATE config_toolbox SET alias='Set initlevel values from executed simulation', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Copy from:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "resultId", "widgettype": "combo", "dvQueryText": "SELECT result_id as id, result_id as idval FROM rpt_cat_result WHERE status !=3", "layoutorder": 0}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3268;
UPDATE config_toolbox SET alias='Massive node rotation update', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "NodeType(s):", "value": null, "tooltip": "Concat values of node type with '',''. Null values will execute all defined node types", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "nodeType", "widgettype": "text", "layoutorder": 1, "placeholder": "''T'',''TANK''"}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3280;
UPDATE config_toolbox SET alias='Merge two or more psectors into one', functionparams='{"featureType":[]}'::json, inputparams='[{"widgetname":"psector_ids", "label":"Psector ids: (*)", "widgettype":"text", "datatype":"text", "layoutname":"grl_option_parameters","layoutorder":0, "isMandatory":true}, {"widgetname":"new_psector_name", "label":"New psector name: (*)", "widgettype":"text", "datatype":"text", "layoutname":"grl_option_parameters","layoutorder":1, "isMandatory":true}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3284;
UPDATE config_toolbox SET alias='Create full Network dscenario', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Name:", "value": null, "tooltip": "Name of the new dscenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "name", "widgettype": "linetext", "isMandatory": true, "layoutorder": 1, "placeholder": ""}, {"label": "descript:", "value": null, "tooltip": "descript of new scenario", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "descript", "widgettype": "linetext", "isMandatory": false, "layoutorder": 2, "placeholder": ""}, {"label": "Exploitation:", "value": null, "tooltip": "dwf scenario type", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id AS id, name as idval FROM v_edit_exploitation", "isMandatory": true, "layoutorder": 3}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3308;
UPDATE config_toolbox SET alias='Set cost for removed material on psectors', functionparams='{"featureType":[]}'::json, inputparams='[{"label": "Exploitation:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "expl", "widgettype": "combo", "dvQueryText": "SELECT expl_id as id, name as idval FROM v_edit_exploitation", "layoutorder": 1}, {"label": "Material:", "value": null, "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "material", "widgettype": "combo", "dvQueryText": "SELECT id, descript as idval FROM cat_mat_arc", "layoutorder": 2}, {"label": "Price:", "value": null, "tooltip": "Code of removal material price", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "price", "widgettype": "linetext", "isMandatory": true, "layoutorder": 3, "placeholder": ""}, {"label": "Observ:", "value": null, "tooltip": "Descriptive text for removal (it apears on psector_x_other observ)", "datatype": "text", "layoutname": "grl_option_parameters", "selectedId": null, "widgetname": "observ", "widgettype": "linetext", "isMandatory": true, "layoutorder": 4, "placeholder": ""}]'::json, observ=NULL, active=true, device='{4}' WHERE id=3322;
