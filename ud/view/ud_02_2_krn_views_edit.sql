/*
This file is part of Giswater 3
The program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This version of Giswater is provided by Giswater Association
*/


SET search_path = "SCHEMA_NAME", public, pg_catalog;

DROP VIEW IF EXISTS v_edit_macrosector CASCADE;
CREATE VIEW v_edit_macrosector AS SELECT DISTINCT on (macrosector_id)
	sector.macrosector_id,
	macrosector.name,
	macrosector.descript,
	macrosector.the_geom,
	macrosector.undelete
FROM inp_selector_sector, sector 
JOIN macrosector ON macrosector.macrosector_id=sector.macrosector_id;
--WHERE ((sector.sector_id)=(inp_selector_sector.sector_id)
--AND inp_selector_sector.cur_user="current_user"());  



DROP VIEW IF EXISTS v_edit_sector CASCADE;
CREATE VIEW v_edit_sector AS SELECT
	sector.sector_id,
	sector.name,
	sector.macrosector_id,
	sector.descript,
	sector.the_geom,
	sector.undelete
FROM inp_selector_sector,sector 
WHERE ((sector.sector_id)=(inp_selector_sector.sector_id)
AND inp_selector_sector.cur_user="current_user"());  


  
  
DROP VIEW IF EXISTS v_edit_dma CASCADE;
CREATE VIEW v_edit_dma AS SELECT
	dma.dma_id,
	dma.name,
	dma.descript,
	dma.the_geom,
	dma.undelete,
	dma.expl_id
	FROM selector_expl, dma 
WHERE ((dma.expl_id)=(selector_expl.expl_id)
AND selector_expl.cur_user="current_user"());
  


-- ----------------------------
-- Editing views structure
-- ----------------------------

DROP VIEW IF EXISTS v_edit_node CASCADE;
CREATE VIEW v_edit_node AS
SELECT 
node_id, 
code,
top_elev, 
custom_top_elev,
ymax,
custom_ymax,
elev,
custom_elev,
elev AS sys_elev,
node_type,
nodecat_id,
cat_matcat_id,
epa_type,
sector_id, 
macrosector_id,
state, 
state_type,
annotation, 
observ, 
comment,
dma_id,
soilcat_id,
function_type,
category_type,
fluid_type,
location_type,
workcat_id,
workcat_id_end,
buildercat_id,
builtdate,
enddate,
ownercat_id,
muni_id ,
postcode,
streetaxis_id,
postnumber,
streetaxis2_id,
postnumber2,
descript,
cat_svg,
rotation,
link,
verified,
the_geom,
undelete,
label_x,
label_y,
label_rotation,
publish,
inventory,
uncertain,
xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value
FROM v_node;


  
DROP VIEW IF EXISTS v_edit_arc CASCADE;
CREATE VIEW v_edit_arc AS
SELECT 
arc_id, 
code,
node_1,
node_2,
y1, 
custom_y1,
elev1,
custom_elev1,
sys_elev1,
y2,
custom_y2,
elev2,
custom_elev2,
sys_elev2,
z1,
z2,
r1,
r2,
slope,
arc_type,
arccat_id, 
matcat_id AS "cat_matcat_id",
shape AS "cat_shape",
geom1 AS "cat_geom1",
geom2 AS "cat_geom2",
gis_length,
epa_type,
sector_id, 
macrosector_id,
state, 
state_type,
annotation, 
observ, 
comment,
inverted_slope,
custom_length,
dma_id,
soilcat_id,
function_type,
category_type,
fluid_type,
location_type,
workcat_id,
workcat_id_end,
buildercat_id,
builtdate,
enddate,
ownercat_id,
muni_id,
postcode,
streetaxis_id,
postnumber,
streetaxis2_id,
postnumber2,
descript,
link,
verified,
the_geom,
undelete,
label_x,
label_y,
label_rotation,
publish,
inventory,
uncertain,	
macrodma_id,
expl_id,
num_value
FROM v_arc_x_node;



DROP VIEW IF EXISTS v_edit_connec CASCADE;
CREATE OR REPLACE VIEW v_edit_connec AS
SELECT connec.connec_id, 
connec.code,
connec.customer_code,
connec.top_elev, 
connec.y1,
connec.y2,
connec.connecat_id,
connec.connec_type,
connec.private_connecat_id,
cat_connec.matcat_id AS "cat_matcat_id",
connec.sector_id,
sector.macrosector_id,
connec.demand,
connec."state", 
connec.state_type,
connec_depth,
connec_length,
connec.arc_id,
connec.annotation, 
connec.observ, 
connec."comment",
connec.dma_id,
connec.soilcat_id,
connec.function_type,
connec.category_type,
connec.fluid_type,
connec.location_type,
connec.workcat_id,
connec.workcat_id_end,
connec.buildercat_id,
connec.builtdate,
connec.enddate,
connec.ownercat_id,
connec.muni_id,
connec.postcode,
connec.streetaxis_id,
connec.postnumber,
connec.streetaxis2_id,
connec.postnumber2,
connec.descript,
cat_connec.svg AS "cat_svg",
connec.rotation,
concat(connec_type.link_path,connec.link) as link,
connec.verified,
connec.the_geom,
connec.undelete,
connec.featurecat_id,
connec.feature_id,
connec.label_x,
connec.label_y,
connec.label_rotation,
connec.accessibility,
connec.diagonal,
connec.publish,
connec.inventory,
connec.uncertain,
dma.macrodma_id,
connec.expl_id,
connec.num_value
FROM connec 
	JOIN v_state_connec ON connec.connec_id=v_state_connec.connec_id
	JOIN cat_connec ON connec.connecat_id = cat_connec.id
	LEFT JOIN ext_streetaxis ON (((connec.streetaxis_id) = (ext_streetaxis.id)))
	LEFT JOIN link ON connec.connec_id = link.feature_id
	LEFT JOIN dma ON connec.dma_id = dma.dma_id
	LEFT JOIN sector ON connec.sector_id = sector.sector_id
	LEFT JOIN connec_type ON connec.connec_type=connec_type.id;




DROP VIEW IF EXISTS v_edit_gully CASCADE;
CREATE OR REPLACE VIEW v_edit_gully AS
SELECT 
gully.gully_id, 
gully.code,
gully.top_elev, 
gully.ymax, 
gully.sandbox,
gully.matcat_id,
gully.gully_type,
gully.gratecat_id,
cat_grate.matcat_id AS "cat_grate_matcat",
gully.units,
gully.groove,
gully.siphon,
gully.connec_arccat_id,
gully.connec_length,
gully.connec_depth,
gully.arc_id,
gully.sector_id, 
sector.macrosector_id,
gully."state", 
gully.state_type,
gully.annotation, 
gully.observ, 
gully."comment",
gully.dma_id,
gully.soilcat_id,
gully.function_type,
gully.category_type,
gully.fluid_type,
gully.location_type,
gully.workcat_id,
gully.workcat_id_end,
gully.buildercat_id,
gully.builtdate,
gully.enddate,
gully.ownercat_id,
gully.muni_id,
gully.postcode,
gully.streetaxis_id,
gully.postnumber,
gully.streetaxis2_id,
gully.postnumber2,
gully.descript,
cat_grate.svg AS "cat_svg",
gully.rotation,
concat(gully_type.link_path,gully.link) as link,
gully.verified,
gully.the_geom,
gully.undelete,
gully.featurecat_id,
gully.feature_id,
gully.label_x,
gully.label_y,
gully.label_rotation,
gully.publish,
gully.inventory,
gully.expl_id,
dma.macrodma_id,
gully.uncertain,
gully.num_value
FROM gully
	JOIN v_state_gully ON gully.gully_id=v_state_gully.gully_id 
	LEFT JOIN cat_grate ON (((gully.gratecat_id) = (cat_grate.id)))
	LEFT JOIN ext_streetaxis ON gully.streetaxis_id = ext_streetaxis.id
	LEFT JOIN dma ON gully.dma_id = dma.dma_id
	LEFT JOIN sector ON gully.sector_id = sector.sector_id
	LEFT JOIN gully_type ON gully.gully_type=gully_type.id
	WHERE gully.the_geom is not null;


DROP VIEW IF EXISTS v_edit_gully_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_gully_pol AS
SELECT
gully.gully_id, 
gully.code,
gully.top_elev, 
gully.ymax, 
gully.sandbox,
gully.matcat_id,
gully.gully_type,
gully.gratecat_id,
cat_grate.matcat_id AS "cat_grate_matcat",
gully.units,
gully.groove,
gully.siphon,
gully.connec_arccat_id,
gully.connec_length,
gully.connec_depth,
gully.arc_id,
gully.sector_id, 
sector.macrosector_id,
gully."state", 
gully.state_type,
gully.annotation, 
gully.observ, 
gully."comment",
gully.dma_id,
gully.soilcat_id,
gully.function_type,
gully.category_type,
gully.fluid_type,
gully.location_type,
gully.workcat_id,
gully.workcat_id_end,
gully.buildercat_id,
gully.builtdate,
gully.enddate,
gully.ownercat_id,
gully.muni_id,
gully.postcode,
gully.streetaxis_id,
gully.postnumber,
gully.streetaxis2_id,
gully.postnumber2,
gully.descript,
cat_grate.svg AS "cat_svg",
gully.rotation,
concat(gully_type.link_path,gully.link) as link,
gully.verified,
gully.the_geom_pol,
gully.undelete,
gully.featurecat_id,
gully.feature_id,
gully.label_x,
gully.label_y,
gully.label_rotation,
gully.publish,
gully.inventory,
dma.macrodma_id,
gully.expl_id,
gully.uncertain,
gully.num_value
FROM gully
	JOIN v_state_gully ON gully.gully_id=v_state_gully.gully_id 
	LEFT JOIN cat_grate ON (((gully.gratecat_id) = (cat_grate.id)))
	LEFT JOIN ext_streetaxis ON streetaxis_id=ext_streetaxis.id
	LEFT JOIN dma ON gully.dma_id = dma.dma_id
	LEFT JOIN sector ON gully.sector_id = sector.sector_id
	LEFT JOIN gully_type ON gully.gully_type=gully_type.id
	WHERE gully.the_geom_pol is not null;


	
DROP VIEW IF EXISTS v_edit_link;
CREATE OR REPLACE VIEW v_edit_link AS 
 SELECT link.link_id,
    link.feature_type,
    link.feature_id,
    link.exit_type,
	link.exit_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.sector_id
            WHEN link.feature_type::text = 'GULLY'::text THEN gully.sector_id
            ELSE vnode.sector_id
        END AS sector_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.dma_id
            WHEN link.feature_type::text = 'GULLY'::text THEN gully.dma_id
            ELSE vnode.dma_id
        END AS dma_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.expl_id
            WHEN link.feature_type::text = 'GULLY'::text THEN gully.expl_id
            ELSE vnode.expl_id
        END AS expl_id,
	link.state,
    st_length2d(link.the_geom) AS gis_length,
    link.userdefined_geom,
    link.the_geom
   FROM selector_expl,
    selector_state,
    link
     LEFT JOIN connec ON link.feature_id::text = connec.connec_id::text AND link.feature_type::text = 'CONNEC'::text
     LEFT JOIN gully ON link.feature_id::text = gully.gully_id::text AND link.feature_type::text = 'GULLY'::text
     LEFT JOIN vnode ON link.feature_id::text = vnode.vnode_id::text AND link.feature_type::text = 'VNODE'::text
  WHERE connec.expl_id = selector_expl.expl_id AND selector_expl.cur_user = "current_user"()::text  AND connec.state = selector_state.state_id AND selector_state.cur_user = "current_user"()::text 
  OR (gully.expl_id = selector_expl.expl_id AND selector_expl.cur_user = "current_user"()::text AND gully.state = selector_state.state_id AND selector_state.cur_user = "current_user"()::text)
  OR (vnode.expl_id = selector_expl.expl_id AND selector_expl.cur_user = "current_user"()::text AND vnode.state = selector_state.state_id AND selector_state.cur_user = "current_user"()::text)
  ;


 
  
  
DROP VIEW IF EXISTS v_edit_vnode CASCADE;
CREATE VIEW v_edit_vnode AS SELECT
vnode_id,
vnode_type,
vnode.sector_id,
vnode.dma_id,
vnode.state,
annotation,
vnode.the_geom,
vnode.expl_id
FROM selector_expl, selector_state, vnode
	WHERE 
	vnode.expl_id=selector_expl.expl_id AND selector_expl.cur_user="current_user"() AND
	vnode.state=selector_state.state_id AND selector_state.cur_user="current_user"();


	
DROP VIEW IF EXISTS v_edit_man_junction CASCADE;
CREATE OR REPLACE VIEW v_edit_man_junction AS 
SELECT 
v_node.node_id,
code AS jt_code,
top_elev AS jt_top_elev,
custom_top_elev AS jt_custom_top_elev,
ymax AS jt_ymax,
custom_ymax AS jt_custom_ymax,
elev AS jt_elev,
custom_elev AS jt_custom_elev,
sys_elev AS jt_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS jt_annotation,
observ AS jt_observ,
comment AS jt_comment,
dma_id,
soilcat_id AS jt_soilcat_id,
function_type AS jt_function_type,
category_type AS jt_category_type,
fluid_type AS jt_fluid_type,
location_type AS jt_location_type,
workcat_id AS jt_workcat_id,
workcat_id_end AS jt_workcat_id_end,
buildercat_id AS jt_buildercat_id,
builtdate AS jt_builtdate,
enddate AS jt_enddate,
ownercat_id AS jt_ownercat_id,
muni_id AS jt_muni_id,
postcode AS jt_postcode,
streetaxis_id AS jt_streetaxis_id,
postnumber AS jt_postnumber,
streetaxis2_id AS jt_streetaxis2_id,
postnumber2 AS jt_postnumber2,
descript AS jt_descript,
rotation AS jt_rotation,
cat_svg AS jt_cat_svg,
link AS jt_link,
verified,
the_geom,
undelete,
label_x AS jt_label_x,
label_y AS jt_label_y,
label_rotation AS jt_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS jt_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as jt_num_value
FROM v_node
	JOIN man_junction ON man_junction.node_id = v_node.node_id;
	
	 
DROP VIEW IF EXISTS v_edit_man_outfall CASCADE;
CREATE OR REPLACE VIEW v_edit_man_outfall AS 
SELECT 
v_node.node_id,
code AS of_code,
top_elev AS of_top_elev,
custom_top_elev AS of_custom_top_elev,
ymax AS of_ymax,
custom_ymax AS of_custom_ymax,
elev AS of_elev,
custom_elev AS of_custom_elev,
sys_elev AS of_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS of_annotation,
observ AS of_observ,
comment AS of_comment,
dma_id,
soilcat_id AS of_soilcat_id,
function_type AS of_function_type,
category_type AS of_category_type,
fluid_type AS of_fluid_type,
location_type AS of_location_type,
workcat_id AS of_workcat_id,
workcat_id_end AS of_workcat_id_end,
buildercat_id AS of_buildercat_id,
builtdate AS of_builtdate,
enddate AS of_enddate,
ownercat_id AS of_ownercat_id,
muni_id AS of_muni_id,
postcode AS of_postcode,
streetaxis_id AS of_streetaxis_id,
postnumber AS of_postnumber,
streetaxis2_id AS of_streetaxis2_id,
postnumber2 AS of_postnumber2,
descript AS of_descript,
rotation AS of_rotation,
cat_svg AS of_cat_svg,
link AS of_link,
verified,
the_geom,
undelete,
label_x AS of_label_x,
label_y AS of_label_y,
label_rotation AS of_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS of_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as of_num_value,
man_outfall.name AS of_name
FROM v_node
	JOIN man_outfall ON man_outfall.node_id = v_node.node_id;
	
	
	 
DROP VIEW IF EXISTS v_edit_man_storage CASCADE;
CREATE OR REPLACE VIEW v_edit_man_storage AS 
SELECT 
v_node.node_id,
code as st_code,
top_elev AS st_top_elev,
custom_top_elev AS st_custom_top_elev,
ymax AS st_ymax,
custom_ymax AS st_custom_ymax,
elev AS st_elev,
custom_elev AS st_custom_elev,
sys_elev AS st_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS st_annotation,
observ AS st_observ,
comment AS st_comment,
dma_id,
soilcat_id AS st_soilcat_id,
function_type AS st_function_type,
category_type AS st_category_type,
fluid_type AS st_fluid_type,
location_type AS st_location_type,
workcat_id AS st_workcat_id,
workcat_id_end AS st_workcat_id_end,
buildercat_id AS st_buildercat_id,
builtdate AS st_builtdate,
enddate AS st_enddate,
ownercat_id AS st_ownercat_id,
muni_id AS st_muni_id,
postcode AS st_postcode,
streetaxis_id AS st_streetaxis_id,
postnumber AS st_postnumber,
streetaxis2_id AS st_streetaxis2_id,
postnumber2 AS st_postnumber2,
descript AS st_descript,
rotation AS st_rotation,
cat_svg AS st_cat_svg,
link AS st_link,
verified,
the_geom,
undelete,
label_x AS st_label_x,
label_y AS st_label_y,
label_rotation AS st_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS st_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as st_num_value,
man_storage.pol_id as st_pol_id,
man_storage.length as st_length,
man_storage.width as st_width,
man_storage.custom_area as st_custom_area,
man_storage.max_volume AS st_max_volume,
man_storage.util_volume AS st_util_volume,
man_storage.min_height AS st_min_height,
man_storage.accessibility AS st_accessibility,
man_storage.name AS st_name
FROM v_node
	JOIN man_storage ON man_storage.node_id = v_node.node_id;
	

	 

DROP VIEW IF EXISTS v_edit_man_storage_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_storage_pol AS 
SELECT 
v_node.node_id,
code as st_code,
top_elev AS st_top_elev,
custom_top_elev AS st_custom_top_elev,
ymax AS st_ymax,
custom_ymax AS st_custom_ymax,
elev AS st_elev,
custom_elev AS st_custom_elev,
sys_elev AS st_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS st_annotation,
observ AS st_observ,
comment AS st_comment,
dma_id,
soilcat_id AS st_soilcat_id,
function_type AS st_function_type,
category_type AS st_category_type,
fluid_type AS st_fluid_type,
location_type AS st_location_type,
workcat_id AS st_workcat_id,
workcat_id_end AS st_workcat_id_end,
buildercat_id AS st_buildercat_id,
builtdate AS st_builtdate,
enddate AS st_enddate,
ownercat_id AS st_ownercat_id,
muni_id AS st_muni_id,
postcode AS st_postcode,
streetaxis_id AS st_streetaxis_id,
postnumber AS st_postnumber,
streetaxis2_id AS st_streetaxis2_id,
postnumber2 AS st_postnumber2,
descript AS st_descript,
rotation AS st_rotation,
cat_svg AS st_cat_svg,
link AS st_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS st_label_x,
label_y AS st_label_y,
label_rotation AS st_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS st_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as st_num_value,
man_storage.pol_id as st_pol_id,
man_storage.length as st_length,
man_storage.width as st_width,
man_storage.custom_area as st_custom_area,
man_storage.max_volume AS st_max_volume,
man_storage.util_volume AS st_util_volume,
man_storage.min_height AS st_min_height,
man_storage.accessibility AS st_accessibility,
man_storage.name AS st_name
FROM v_node
	JOIN man_storage ON man_storage.node_id = v_node.node_id
	JOIN polygon ON polygon.pol_id = man_storage.pol_id;

	 
	 
	 
DROP VIEW IF EXISTS v_edit_man_valve CASCADE;
CREATE OR REPLACE VIEW v_edit_man_valve AS 
SELECT 
v_node.node_id,
code AS vl_code,
top_elev AS vl_top_elev,
custom_top_elev AS vl_custom_top_elev,
ymax AS vl_ymax,
custom_ymax AS vl_custom_ymax,
elev AS vl_elev,
custom_elev AS vl_custom_elev,
sys_elev AS vl_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS vl_annotation,
observ AS vl_observ,
comment AS vl_comment,
dma_id,
soilcat_id AS vl_soilcat_id,
function_type AS vl_function_type,
category_type AS vl_category_type,
fluid_type AS vl_fluid_type,
location_type AS vl_location_type,
workcat_id AS vl_workcat_id,
workcat_id_end AS vl_workcat_id_end,
buildercat_id AS vl_buildercat_id,
builtdate AS vl_builtdate,
enddate AS vl_enddate,
ownercat_id AS vl_ownercat_id,
muni_id AS vl_muni_id,
postcode AS vl_postcode,
streetaxis_id AS vl_streetaxis_id,
postnumber AS vl_postnumber,
streetaxis2_id AS vl_streetaxis2_id,
postnumber2 AS vl_postnumber2,
descript AS vl_descript,
rotation AS vl_rotation,
cat_svg AS vl_cat_svg,
link AS vl_link,
verified,
the_geom,
v_node.undelete,
label_x AS vl_label_x,
label_y AS vl_label_y,
label_rotation AS vl_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS vl_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as vl_num_value,
man_valve.name AS vl_name
FROM v_node
	JOIN man_valve ON man_valve.node_id = v_node.node_id;
	
	 
	 
DROP VIEW IF EXISTS v_edit_man_netinit CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netinit AS 
SELECT 
v_node.node_id,
code AS ni_code,
top_elev AS ni_top_elev,
custom_top_elev AS ni_custom_top_elev,
ymax AS ni_ymax,
custom_ymax AS ni_custom_ymax,
elev AS ni_elev,
custom_elev AS ni_custom_elev,
sys_elev AS ni_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ni_annotation,
observ AS ni_observ,
comment AS ni_comment,
dma_id,
soilcat_id AS ni_soilcat_id,
function_type AS ni_function_type,
category_type AS ni_category_type,
fluid_type AS ni_fluid_type,
location_type AS ni_location_type,
workcat_id AS ni_workcat_id,
workcat_id_end AS ni_workcat_id_end,
buildercat_id AS ni_buildercat_id,
builtdate AS ni_builtdate,
enddate AS ni_enddate,
ownercat_id AS ni_ownercat_id,
muni_id AS ni_muni_id,
postcode AS ni_postcode,
streetaxis_id AS ni_streetaxis_id,
postnumber AS ni_postnumber,
streetaxis2_id AS ni_streetaxis2_id,
postnumber2 AS ni_postnumber2,
descript AS ni_descript,
rotation AS ni_rotation,
cat_svg AS ni_cat_svg,
link AS ni_link,
verified,
the_geom,
v_node.undelete,
label_x AS ni_label_x,
label_y AS ni_label_y,
label_rotation AS ni_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ni_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ni_num_value,
man_netinit.length AS ni_length,
man_netinit.width AS ni_width,
man_netinit.inlet AS ni_inlet,
man_netinit.bottom_channel AS ni_bottom_channel,
man_netinit.accessibility AS ni_accessibility,
man_netinit.name AS ni_name,
man_netinit.sander_depth AS ni_sander_depth
FROM v_node
	JOIN man_netinit ON man_netinit.node_id = v_node.node_id;


	 
DROP VIEW IF EXISTS v_edit_man_manhole CASCADE;
CREATE OR REPLACE VIEW v_edit_man_manhole AS 
SELECT 
v_node.node_id,
code AS mh_code,
top_elev AS mh_top_elev,
custom_top_elev AS mh_custom_top_elev,
ymax AS mh_ymax,
custom_ymax AS mh_custom_ymax,
elev AS mh_elev,
custom_elev AS mh_custom_elev,
sys_elev AS mh_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS mh_annotation,
observ AS mh_observ,
comment AS mh_comment,
dma_id,
soilcat_id AS mh_soilcat_id,
function_type AS mh_function_type,
category_type AS mh_category_type,
fluid_type AS mh_fluid_type,
location_type AS mh_location_type,
workcat_id AS mh_workcat_id,
workcat_id_end AS mh_workcat_id_end,
buildercat_id AS mh_buildercat_id,
builtdate AS mh_builtdate,
enddate AS mh_enddate,
ownercat_id AS mh_ownercat_id,
muni_id AS mh_muni_id,
postcode AS mh_postcode,
streetaxis_id AS mh_streetaxis_id,
postnumber AS mh_postnumber,
streetaxis2_id AS mh_streetaxis2_id,
postnumber2 AS mh_postnumber2,
descript AS mh_descript,
rotation AS mh_rotation,
cat_svg AS mh_cat_svg,
link AS mh_link,
verified,
the_geom,
v_node.undelete,
label_x AS mh_label_x,
label_y AS mh_label_y,
label_rotation AS mh_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS mh_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as mh_num_value,
man_manhole.length AS mh_length,
man_manhole.width AS mh_width,
man_manhole.sander_depth AS mh_sander_depth,
man_manhole.prot_surface AS mh_prot_surface,
man_manhole.inlet AS mh_inlet,
man_manhole.bottom_channel AS mh_bottom_channel,
man_manhole.accessibility AS mh_accessibility
FROM v_node
	JOIN man_manhole ON man_manhole.node_id = v_node.node_id;
	

	 
DROP VIEW IF EXISTS v_edit_man_wjump CASCADE;
CREATE OR REPLACE VIEW v_edit_man_wjump AS 
SELECT 
v_node.node_id,
code AS wj_code,
top_elev AS wj_top_elev,
custom_top_elev AS wj_custom_top_elev,
ymax AS wj_ymax,
custom_ymax AS wj_custom_ymax,
elev AS wj_elev,
custom_elev AS wj_custom_elev,
sys_elev AS wj_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS wj_annotation,
observ AS wj_observ,
comment AS wj_comment,
dma_id,
soilcat_id AS wj_soilcat_id,
function_type AS wj_function_type,
category_type AS wj_category_type,
fluid_type AS wj_fluid_type,
location_type AS wj_location_type,
workcat_id AS wj_workcat_id,
workcat_id_end AS wj_workcat_id_end,
buildercat_id AS wj_buildercat_id,
builtdate AS wj_builtdate,
enddate AS wj_enddate,
ownercat_id AS wj_ownercat_id,
muni_id AS wj_muni_id,
postcode AS wj_postcode,
streetaxis_id AS wj_streetaxis_id,
postnumber AS wj_postnumber,
streetaxis2_id AS wj_streetaxis2_id,
postnumber2 AS wj_postnumber2,
descript AS wj_descript,
rotation AS wj_rotation,
cat_svg AS wj_cat_svg,
link AS wj_link,
verified,
the_geom,
v_node.undelete,
label_x AS wj_label_x,
label_y AS wj_label_y,
label_rotation AS wj_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS wj_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as wj_num_value,
man_wjump.length AS wj_length,
man_wjump.width AS wj_width,
man_wjump.sander_depth AS wj_sander_depth,
man_wjump.prot_surface AS wj_prot_surface,
man_wjump.accessibility AS wj_accessibility,
man_wjump.name AS wj_name
FROM v_node
	JOIN man_wjump ON man_wjump.node_id = v_node.node_id;


	 
DROP VIEW IF EXISTS v_edit_man_netgully CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netgully AS 
SELECT 
v_node.node_id,
code AS ng_code,
top_elev AS ng_top_elev,
custom_top_elev AS ng_custom_top_elev,
ymax AS ng_ymax,
custom_ymax AS ng_custom_ymax,
elev AS ng_elev,
custom_elev AS ng_custom_elev,
sys_elev AS ng_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ng_annotation,
observ AS ng_observ,
comment AS ng_comment,
dma_id,
soilcat_id AS ng_soilcat_id,
function_type AS ng_function_type,
category_type AS ng_category_type,
fluid_type AS ng_fluid_type,
location_type AS ng_location_type,
workcat_id AS ng_workcat_id,
workcat_id_end AS ng_workcat_id_end,
buildercat_id AS ng_buildercat_id,
builtdate AS ng_builtdate,
enddate AS ng_enddate,
ownercat_id AS ng_ownercat_id,
muni_id AS ng_muni_id,
postcode AS ng_postcode,
streetaxis_id AS ng_streetaxis_id,
postnumber AS ng_postnumber,
streetaxis2_id AS ng_streetaxis2_id,
postnumber2 AS ng_postnumber2,
descript AS ng_descript,
rotation AS ng_rotation,
cat_svg AS ng_cat_svg,
link AS ng_link,
verified,
the_geom,
v_node.undelete,
label_x AS ng_label_x,
label_y AS ng_label_y,
label_rotation AS ng_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ng_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ng_num_value,
man_netgully.pol_id AS ng_pol_id,
man_netgully.sander_depth AS ng_sander_depth,
man_netgully.gratecat_id AS ng_gratecat_id,
man_netgully.units AS ng_units,
man_netgully.groove AS ng_groove,
man_netgully.siphon AS ng_siphon
FROM v_node
	JOIN man_netgully ON man_netgully.node_id = v_node.node_id;

	 

DROP VIEW IF EXISTS v_edit_man_netgully_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netgully_pol AS 
SELECT 
v_node.node_id,
code AS ng_code,
top_elev AS ng_top_elev,
custom_top_elev AS ng_custom_top_elev,
ymax AS ng_ymax,
custom_ymax AS ng_custom_ymax,
elev AS ng_elev,
custom_elev AS ng_custom_elev,
sys_elev AS ng_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ng_annotation,
observ AS ng_observ,
comment AS ng_comment,
dma_id,
soilcat_id AS ng_soilcat_id,
function_type AS ng_function_type,
category_type AS ng_category_type,
fluid_type AS ng_fluid_type,
location_type AS ng_location_type,
workcat_id AS ng_workcat_id,
workcat_id_end AS ng_workcat_id_end,
buildercat_id AS ng_buildercat_id,
builtdate AS ng_builtdate,
enddate AS ng_enddate,
ownercat_id AS ng_ownercat_id,
muni_id AS ng_muni_id,
postcode AS ng_postcode,
streetaxis_id AS ng_streetaxis_id,
postnumber AS ng_postnumber,
streetaxis2_id AS ng_streetaxis2_id,
postnumber2 AS ng_postnumber2,
descript AS ng_descript,
rotation AS ng_rotation,
cat_svg AS ng_cat_svg,
link AS ng_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS ng_label_x,
label_y AS ng_label_y,
label_rotation AS ng_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ng_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ng_num_value,
man_netgully.pol_id AS ng_pol_id,
man_netgully.sander_depth AS ng_sander_depth,
man_netgully.gratecat_id AS ng_gratecat_id,
man_netgully.units AS ng_units,
man_netgully.groove AS ng_groove,
man_netgully.siphon AS ng_siphon
FROM v_node
	JOIN man_netgully ON man_netgully.node_id = v_node.node_id
	JOIN polygon ON polygon.pol_id = man_netgully.pol_id;



DROP VIEW IF EXISTS v_edit_man_chamber CASCADE;
CREATE OR REPLACE VIEW v_edit_man_chamber AS 
SELECT 
v_node.node_id,
code  AS ch_code,
top_elev AS ch_top_elev,
custom_top_elev AS ch_custom_top_elev,
ymax AS ch_ymax,
custom_ymax AS ch_custom_ymax,
elev AS ch_elev,
custom_elev AS ch_custom_elev,
sys_elev AS ch_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ch_annotation,
observ AS ch_observ,
comment AS ch_comment,
dma_id,
soilcat_id AS ch_soilcat_id,
function_type AS ch_function_type,
category_type AS ch_category_type,
fluid_type AS ch_fluid_type,
location_type AS ch_location_type,
workcat_id AS ch_workcat_id,
workcat_id_end AS ch_workcat_id_end,
buildercat_id AS ch_buildercat_id,
builtdate AS ch_builtdate,
enddate AS ch_enddate,
ownercat_id AS ch_ownercat_id,
muni_id AS ch_muni_id,
postcode AS ch_postcode,
streetaxis_id AS ch_streetaxis_id,
postnumber AS ch_postnumber,
streetaxis2_id AS ch_streetaxis2_id,
postnumber2 AS ch_postnumber2,
descript AS ch_descript,
rotation AS ch_rotation,
cat_svg AS ch_cat_svg,
link AS ch_link,
verified,
the_geom,
undelete,
label_x AS ch_label_x,
label_y AS ch_label_y,
label_rotation AS ch_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ch_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ch_num_value,
man_chamber.pol_id AS ch_pol_id,
man_chamber.length AS ch_length,
man_chamber.width AS ch_width,
man_chamber.sander_depth AS ch_sander_depth,
man_chamber.max_volume AS ch_max_volume,
man_chamber.util_volume AS ch_util_volume,
man_chamber.inlet AS ch_inlet,
man_chamber.bottom_channel AS ch_bottom_channel,
man_chamber.accessibility AS ch_accessibility,
man_chamber.name AS ch_name
FROM v_node
    JOIN man_chamber ON man_chamber.node_id = v_node.node_id;
	 
	 
	 
DROP VIEW IF EXISTS v_edit_man_chamber_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_chamber_pol AS 
SELECT 
v_node.node_id,
code  AS ch_code,
top_elev AS ch_top_elev,
custom_top_elev AS ch_custom_top_elev,
ymax AS ch_ymax,
custom_ymax AS ch_custom_ymax,
elev AS ch_elev,
custom_elev AS ch_custom_elev,
sys_elev AS ch_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ch_annotation,
observ AS ch_observ,
comment AS ch_comment,
dma_id,
soilcat_id AS ch_soilcat_id,
function_type AS ch_function_type,
category_type AS ch_category_type,
fluid_type AS ch_fluid_type,
location_type AS ch_location_type,
workcat_id AS ch_workcat_id,
workcat_id_end AS ch_workcat_id_end,
buildercat_id AS ch_buildercat_id,
builtdate AS ch_builtdate,
enddate AS ch_enddate,
ownercat_id AS ch_ownercat_id,
muni_id AS ch_muni_id,
postcode AS ch_postcode,
streetaxis_id AS ch_streetaxis_id,
postnumber AS ch_postnumber,
streetaxis2_id AS ch_streetaxis2_id,
postnumber2 AS ch_postnumber2,
descript AS ch_descript,
rotation AS ch_rotation,
cat_svg AS ch_cat_svg,
link AS ch_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS ch_label_x,
label_y AS ch_label_y,
label_rotation AS ch_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ch_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ch_num_value,
man_chamber.pol_id  AS ch_pol_id,
man_chamber.length AS ch_length,
man_chamber.width AS ch_width,
man_chamber.sander_depth AS ch_sander_depth,
man_chamber.max_volume AS ch_max_volume,
man_chamber.util_volume AS ch_util_volume,
man_chamber.inlet AS ch_inlet,
man_chamber.bottom_channel AS ch_bottom_channel,
man_chamber.accessibility AS ch_accessibility,
man_chamber.name AS ch_name
FROM v_node
	JOIN man_chamber ON man_chamber.node_id = v_node.node_id
	JOIN polygon ON polygon.pol_id = man_chamber.pol_id;



DROP VIEW IF EXISTS v_edit_man_wwtp CASCADE;
CREATE OR REPLACE VIEW v_edit_man_wwtp AS 
SELECT 
v_node.node_id,
code AS wt_code,
top_elev AS wt_top_elev,
custom_top_elev AS wt_custom_top_elev,
ymax AS wt_ymax,
custom_ymax AS wt_custom_ymax,
elev AS wt_elev,
custom_elev AS wt_custom_elev,
sys_elev AS wt_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS wt_annotation,
observ AS wt_observ,
comment AS wt_comment,
dma_id,
soilcat_id AS wt_soilcat_id,
function_type AS wt_function_type,
category_type AS wt_category_type,
fluid_type AS wt_fluid_type,
location_type AS wt_location_type,
workcat_id AS wt_workcat_id,
workcat_id_end AS wt_workcat_id_end,
buildercat_id AS wt_buildercat_id,
builtdate AS wt_builtdate,
enddate AS wt_enddate,
ownercat_id AS wt_ownercat_id,
muni_id AS wt_muni_id,
postcode AS wt_postcode,
streetaxis_id AS wt_streetaxis_id,
postnumber AS wt_postnumber,
streetaxis2_id AS wt_streetaxis2_id,
postnumber2 AS wt_postnumber2,
descript AS wt_descript,
rotation AS wt_rotation,
cat_svg AS wt_cat_svg,
link AS wt_link,
verified,
the_geom,
undelete,
label_x AS wt_label_x,
label_y AS wt_label_y,
label_rotation AS wt_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS wt_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as wt_num_value,
man_wwtp.pol_id AS wt_pol_id,
man_wwtp.name AS wt_name
FROM v_node
	JOIN man_wwtp ON man_wwtp.node_id = v_node.node_id;
	


DROP VIEW IF EXISTS v_edit_man_wwtp_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_wwtp_pol AS 
SELECT 
v_node.node_id,
code AS wt_code,
top_elev AS wt_top_elev,
custom_top_elev AS wt_custom_top_elev,
ymax AS wt_ymax,
custom_ymax AS wt_custom_ymax,
elev AS wt_elev,
custom_elev AS wt_custom_elev,
sys_elev AS wt_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS wt_annotation,
observ AS wt_observ,
comment AS wt_comment,
dma_id,
soilcat_id AS wt_soilcat_id,
function_type AS wt_function_type,
category_type AS wt_category_type,
fluid_type AS wt_fluid_type,
location_type AS wt_location_type,
workcat_id AS wt_workcat_id,
workcat_id_end AS wt_workcat_id_end,
buildercat_id AS wt_buildercat_id,
builtdate AS wt_builtdate,
enddate AS wt_enddate,
ownercat_id AS wt_ownercat_id,
muni_id AS wt_muni_id,
postcode AS wt_postcode,
streetaxis_id AS wt_streetaxis_id,
postnumber AS wt_postnumber,
streetaxis2_id AS wt_streetaxis2_id,
postnumber2 AS wt_postnumber2,
descript AS wt_descript,
rotation AS wt_rotation,
cat_svg AS wt_cat_svg,
link AS wt_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS wt_label_x,
label_y AS wt_label_y,
label_rotation AS wt_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS wt_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as wt_num_value,
man_wwtp.pol_id AS wt_pol_id, 
man_wwtp.name AS wt_name
FROM v_node
	JOIN man_wwtp ON man_wwtp.node_id = v_node.node_id
	JOIN polygon ON polygon.pol_id = man_wwtp.pol_id;
	


DROP VIEW IF EXISTS v_edit_man_netelement CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netelement AS 
SELECT 
v_node.node_id,
code AS ne_code,
top_elev AS ne_top_elev,
custom_top_elev AS ne_custom_top_elev,
ymax AS ne_ymax,
custom_ymax AS ne_custom_ymax,
elev AS ne_elev,
custom_elev AS ne_custom_elev,
sys_elev AS ne_sys_elev,
node_type,
nodecat_id,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS ne_annotation,
observ AS ne_observ,
comment AS ne_comment,
dma_id,
soilcat_id AS ne_soilcat_id,
function_type AS ne_function_type,
category_type AS ne_category_type,
fluid_type AS ne_fluid_type,
location_type AS ne_location_type,
workcat_id AS ne_workcat_id,
workcat_id_end AS ne_workcat_id_end,
buildercat_id AS ne_buildercat_id,
builtdate AS ne_builtdate,
enddate AS ne_enddate,
ownercat_id AS ne_ownercat_id,
muni_id AS ne_muni_id,
postcode AS ne_postcode,
streetaxis_id AS ne_streetaxis_id,
postnumber AS ne_postnumber,
streetaxis2_id AS ne_streetaxis2_id,
postnumber2 AS ne_postnumber2,
descript AS ne_descript,
rotation AS ne_rotation,
cat_svg AS ne_cat_svg,
link AS ne_link,
verified,
the_geom,
undelete,
label_x AS ne_label_x,
label_y AS ne_label_y,
label_rotation AS ne_label_rotation,
publish,
inventory,
uncertain,
xyz_date AS ne_xyz_date,
unconnected,
macrodma_id,
expl_id,
num_value as ne_num_value,
man_netelement.serial_number as ne_serial_number
FROM v_node
	JOIN man_netelement ON man_netelement.node_id = v_node.node_id;



DROP VIEW IF EXISTS v_edit_man_conduit CASCADE;
CREATE OR REPLACE VIEW v_edit_man_conduit AS 
SELECT 
v_arc_x_node.arc_id,
code AS cd_code,
node_1 AS cd_node_1,
node_2 AS cd_node_2,
y1 AS cd_y1,
custom_y1 AS cd_custom_y1,
elev1 AS cd_elev1,
custom_elev1 AS cd_custom_elev1,
sys_elev1 AS cd_sys_elev1,
y2 AS cd_y2,
elev2 AS cd_elev2,
custom_y2 AS cd_custom_y2,
custom_elev2 AS cd_custom_elev2,	
sys_elev2 AS cd_sys_elev2,
z1 AS cd_z1,
z2 AS cd_z2,
r1 AS cd_r1,
r2 AS cd_r2,
slope AS cd_slope,
arc_type,
arccat_id,
matcat_id AS cd_matcat_id,
shape AS cd_cat_shape,
geom1 AS cd_cat_geom1,
geom2 AS cd_cat_geom2,
gis_length AS cd_gis_length,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS cd_annotation,
observ AS cd_observ,
comment AS cd_comment,
inverted_slope AS cd_inverted_slope,
custom_length AS cd_custom_length,
dma_id,
soilcat_id AS cd_soilcat_id,
function_type AS cd_function_type,
category_type AS cd_category_type,
fluid_type AS cd_fluid_type,
location_type AS cd_location_type,
workcat_id AS cd_workcat_id,
workcat_id_end AS cd_workcat_id_end,
buildercat_id AS cd_buildercat_id,
builtdate AS cd_builtdate,
enddate AS cd_enddate,
ownercat_id AS cd_ownercat_id,
muni_id AS cd_muni_id,
postcode AS cd_postcode,
streetaxis_id AS cd_streetaxis_id,
postnumber AS cd_postnumber,
streetaxis2_id AS cd_streetaxis2_id,
postnumber2 AS cd_postnumber2,
descript AS cd_descript,
link AS cd_link,
verified,
the_geom,
undelete,
label_x AS cd_label_x,
label_y AS cd_label_y,
label_rotation AS cd_label_rotation,
publish,
inventory,
uncertain,
macrodma_id,
expl_id,
num_value as cd_num_value
FROM v_arc_x_node
	JOIN man_conduit ON man_conduit.arc_id = v_arc_x_node.arc_id;



DROP VIEW IF EXISTS v_edit_man_siphon CASCADE;
CREATE OR REPLACE VIEW v_edit_man_siphon AS 
SELECT 
v_arc_x_node.arc_id,
code AS sh_code,
node_1 AS sh_node_1,
node_2 AS sh_node_2,
y1 AS sh_y1,
custom_y1 AS sh_custom_y1,
elev1 AS sh_elev1,
custom_elev1 AS sh_custom_elev1,
sys_elev1 AS sh_sys_elev1,
y2 AS sh_y2,
elev2 AS sh_elev2,
custom_y2 AS sh_custom_y2,
custom_elev2 AS sh_custom_elev2,	
sys_elev2 AS sh_sys_elev2,
z1 AS sh_z1,
z2 AS sh_z2,
r1 AS sh_r1,
r2 AS sh_r2,
slope AS sh_slope,
arc_type,
arccat_id,
matcat_id AS sh_matcat_id,
shape AS sh_cat_shape,
geom1 AS sh_cat_geom1,
geom2 AS sh_cat_geom2,
gis_length AS sh_gis_length,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS sh_annotation,
observ AS sh_observ,
comment AS sh_comment,
inverted_slope AS sh_inverted_slope,
custom_length AS sh_custom_length,
dma_id,
soilcat_id AS sh_soilcat_id,
function_type AS sh_function_type,
category_type AS sh_category_type,
fluid_type AS sh_fluid_type,
location_type AS sh_location_type,
workcat_id AS sh_workcat_id,
workcat_id_end AS sh_workcat_id_end,
buildercat_id AS sh_buildercat_id,
builtdate AS sh_builtdate,
enddate AS sh_enddate,
ownercat_id AS sh_ownercat_id,
muni_id AS sh_muni_id,
postcode AS sh_postcode,
streetaxis_id AS sh_streetaxis_id,
postnumber AS sh_postnumber,
streetaxis2_id AS sh_streetaxis2_id,
postnumber2 AS sh_postnumber2,
descript AS sh_descript,
link AS sh_link,
verified,
the_geom,
undelete,
label_x AS sh_label_x,
label_y AS sh_label_y,
label_rotation AS sh_label_rotation,
publish,
inventory,
uncertain,
macrodma_id,
expl_id,
num_value as sh_num_value,
man_siphon.name AS sh_name
FROM v_arc_x_node
	JOIN man_siphon ON man_siphon.arc_id = v_arc_x_node.arc_id;



DROP VIEW IF EXISTS v_edit_man_waccel CASCADE;
CREATE OR REPLACE VIEW v_edit_man_waccel AS 
SELECT 
v_arc_x_node.arc_id,
node_1 AS wl_node_1,
node_2 AS wl_node_2,
y1 AS wl_y1,
custom_y1 AS wl_custom_y1,
elev1 AS wl_elev1,
custom_elev1 AS wl_custom_elev1,
sys_elev1 AS wl_sys_elev1,
y2 AS wl_y2,
elev2 AS wl_elev2,
custom_y2 AS wl_custom_y2,
custom_elev2 AS wl_custom_elev2,	
sys_elev2 AS wl_sys_elev2,
z1 AS wl_z1,
z2 AS wl_z2,
r1 AS wl_r1,
r2 AS wl_r2,
slope AS wl_slope,
arc_type,
arccat_id,
matcat_id AS wl_matcat_id,
shape AS wl_cat_shape,
geom1 AS wl_cat_geom1,
geom2 AS wl_cat_geom2,
gis_length AS wl_gis_length,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS wl_annotation,
observ AS wl_observ,
comment AS wl_comment,
inverted_slope AS wl_inverted_slope,
custom_length AS wl_custom_length,
dma_id,
soilcat_id AS wl_soilcat_id,
function_type AS wl_function_type,
category_type AS wl_category_type,
fluid_type AS wl_fluid_type,
location_type AS wl_location_type,
workcat_id AS wl_workcat_id,
workcat_id_end AS wl_workcat_id_end,
buildercat_id AS wl_buildercat_id,
builtdate AS wl_builtdate,
enddate AS wl_enddate,
ownercat_id AS wl_ownercat_id,
muni_id AS wl_muni_id,
postcode AS wl_postcode,
streetaxis_id AS wl_streetaxis_id,
postnumber AS wl_postnumber,
streetaxis2_id AS wl_streetaxis2_id,
postnumber2 AS wl_postnumber2,
descript AS wl_descript,
link AS wl_link,
verified,
the_geom,
undelete,
label_x AS wl_label_x,
label_y AS wl_label_y,
label_rotation AS wl_label_rotation,
code AS wl_code,
publish,
inventory,
uncertain,
macrodma_id,
expl_id,
num_value as wl_num_value,
man_waccel.sander_length AS wl_sander_length,
man_waccel.sander_depth AS wl_sander_depth,
man_waccel.prot_surface AS wl_prot_surface,
man_waccel.name AS wl_name,
man_waccel.accessibility AS wl_accessibility
FROM v_arc_x_node
	JOIN man_waccel ON man_waccel.arc_id = v_arc_x_node.arc_id;



DROP VIEW IF EXISTS v_edit_man_varc CASCADE;
CREATE OR REPLACE VIEW v_edit_man_varc AS 
SELECT 
v_arc_x_node.arc_id,
code AS va_code,
node_1 AS va_node_1,
node_2 AS va_node_2,
y1 AS va_y1,
custom_y1 AS va_custom_y1,
elev1 AS va_elev1,
custom_elev1 AS va_custom_elev1,
sys_elev1 AS va_sys_elev1,
y2 AS va_y2,
elev2 AS va_elev2,
custom_y2 AS va_custom_y2,
custom_elev2 AS va_custom_elev2,	
sys_elev2 AS va_sys_elev2,
z1 AS va_z1,
z2 AS va_z2,
r1 AS va_r1,
r2 AS va_r2,
slope AS va_slope,
arc_type,
arccat_id,
matcat_id AS va_matcat_id,
shape AS va_cat_shape,
geom1 AS va_cat_geom1,
gis_length AS va_gis_length,
epa_type,
sector_id,
macrosector_id,
state,
state_type,
annotation AS va_annotation,
observ AS va_observ,
comment AS va_comment,
inverted_slope AS va_inverted_slope,
custom_length AS va_custom_length,
dma_id,
soilcat_id AS va_soilcat_id,
function_type AS va_function_type,
category_type AS va_category_type,
fluid_type AS va_fluid_type,
location_type AS va_location_type,
workcat_id AS va_workcat_id,
workcat_id_end AS va_workcat_id_end,
buildercat_id AS va_buildercat_id,
builtdate AS va_builtdate,
enddate AS va_enddate,
ownercat_id AS va_ownercat_id,
muni_id AS va_muni_id,
postcode AS va_postcode,
streetaxis_id AS va_streetaxis_id,
postnumber AS va_postnumber,
streetaxis2_id AS va_streetaxis2_id,
postnumber2 AS va_postnumber2,
descript AS va_descript,
link AS va_link,
verified,
the_geom,
undelete,
label_x AS va_label_x,
label_y AS va_label_y,
label_rotation AS va_label_rotation,
publish,
inventory,
uncertain,
macrodma_id,
expl_id,
num_value as va_num_value
FROM v_arc_x_node
	JOIN man_varc ON man_varc.arc_id = v_arc_x_node.arc_id;




DROP VIEW IF EXISTS v_edit_man_connec CASCADE;
CREATE OR REPLACE VIEW v_edit_man_connec AS
SELECT * FROM v_edit_connec;


DROP VIEW IF EXISTS v_edit_man_gully CASCADE;
CREATE OR REPLACE VIEW v_edit_man_gully AS
SELECT * FROM v_edit_gully;


DROP VIEW IF EXISTS v_edit_man_gully_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_gully_pol AS
SELECT * FROM v_edit_gully_pol



