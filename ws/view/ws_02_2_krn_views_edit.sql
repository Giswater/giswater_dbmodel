/*
This file is part of Giswater 3
The program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
This version of Giswater is provided by Giswater Association
*/

SET search_path = "SCHEMA_NAME", public, pg_catalog;

----------------------------
--GIS EDITING VIEWS
----------------------------


DROP VIEW IF EXISTS v_edit_macrodma CASCADE;
CREATE VIEW v_edit_macrodma AS SELECT
	macrodma.macrodma_id,
	macrodma.name,
	macrodma.descript,
	macrodma.the_geom,
	macrodma.undelete,
	macrodma.expl_id
FROM selector_expl, macrodma 
WHERE ((macrodma.expl_id)=(selector_expl.expl_id)
AND selector_expl.cur_user="current_user"());
  

  
DROP VIEW IF EXISTS v_edit_dma CASCADE;
CREATE VIEW v_edit_dma AS SELECT
	dma.dma_id,
	dma.name,
	dma.macrodma_id,
	dma.descript,
	dma.the_geom,
	dma.undelete,
	dma.expl_id
	FROM selector_expl, dma 
WHERE ((dma.expl_id)=(selector_expl.expl_id)
AND selector_expl.cur_user="current_user"());
  


DROP VIEW IF EXISTS v_edit_sector CASCADE;
CREATE VIEW v_edit_sector AS SELECT
	sector.sector_id,
	sector.name,
	sector.descript,
	sector.the_geom,
	sector.undelete
FROM inp_selector_sector,sector 
WHERE ((sector.sector_id)=(inp_selector_sector.sector_id) 
AND inp_selector_sector.cur_user="current_user"());




DROP VIEW IF EXISTS v_edit_node CASCADE;
CREATE OR REPLACE VIEW v_edit_node AS
SELECT 
node_id, 
code,
elevation, 
depth, 
nodetype_id AS nodetype_id,
nodecat_id,
cat_matcat_id,
cat_pnom, 
cat_dnom,
epa_type,
sector_id, 
state, 
state_type,
annotation, 
observ, 
comment,
dma_id,
presszonecat_id,
soilcat_id,
function_type,
category_type,
fluid_type,
location_type,
workcat_id,
buildercat_id,
workcat_id_end,
builtdate,
enddate,
ownercat_id,
muni_id ,
postcode,
streetaxis_id,
postnumber,
streetaxis2_id,
postnumber2,
descript,
cat_svg,
rotation,
link,
verified,
the_geom,
undelete,
label_x,
label_y,
label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere,
num_value
FROM v_node;


DROP VIEW IF EXISTS v_edit_arc CASCADE;
CREATE OR REPLACE VIEW v_edit_arc AS
SELECT 
arc_id,
code,
node_1,
node_2,
arccat_id, 
arctype_id AS "cat_arctype_id",
matcat_id AS "cat_matcat_id",
pnom AS "cat_pnom",
dnom AS "cat_dnom",
epa_type,
sector_id, 
state, 
state_type,
annotation, 
observ, 
comment,
gis_length,
custom_length,
dma_id,
presszonecat_id,
soilcat_id,
function_type,
category_type,
fluid_type,
location_type,
workcat_id,
workcat_id_end,
buildercat_id,
builtdate,
enddate,
ownercat_id,
muni_id ,
postcode,
streetaxis_id,
postnumber,
streetaxis2_id,
postnumber2,
descript,
link,
verified,
the_geom,
undelete,
label_x,
label_y,
label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
num_value
FROM v_arc;

DROP VIEW IF EXISTS v_edit_man_pipe CASCADE;
CREATE OR REPLACE VIEW v_edit_man_pipe AS
SELECT 
v_arc.arc_id,
code AS pi_code,
node_1 AS pi_node_1,
node_2 AS pi_node_2,
arccat_id, 
arctype_id AS "cat_arctype_id",
matcat_id AS "pi_matcat_id",
pnom AS "pi_cat_pnom",
dnom AS "pi_cat_dnom",
epa_type,
sector_id, 
state,
state_type,
annotation AS pi_annotation, 
observ AS pi_observ, 
"comment" AS pi_comment,
gis_length AS pi_gis_length,
custom_length AS pi_custom_length,
dma_id,
presszonecat_id,
soilcat_id AS pi_soilcat_id,
function_type AS pi_function_type,
category_type AS pi_category_type,
fluid_type AS pi_fluid_type,
location_type AS pi_location_type,
workcat_id AS pi_workcat_id,
workcat_id_end AS pi_workcat_id_end,
buildercat_id AS pi_buildercat_id,
builtdate AS pi_builtdate,
enddate AS pi_enddate,
ownercat_id AS pi_ownercat_id,
muni_id AS pi_muni_id,
postcode AS pi_postcode,
streetaxis_id AS pi_streetaxis_id,
postnumber AS pi_postnumber,
streetaxis2_id AS pi_streetaxis2_id,
postnumber2 AS pi_postnumber2,
descript AS pi_descript,
link AS pi_link,
verified,
the_geom,
undelete,
label_x AS pi_label_x,
label_y AS pi_label_y,
label_rotation AS pi_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
num_value AS pi_num_value
FROM v_arc
	JOIN man_pipe ON man_pipe.arc_id=v_arc.arc_id;



DROP VIEW IF EXISTS v_edit_man_varc CASCADE;
CREATE OR REPLACE VIEW v_edit_man_varc AS
SELECT 
v_arc.arc_id,
code AS va_code,
node_1 AS va_node_1,
node_2 AS va_node_2,
arccat_id, 
arctype_id AS "cat_arctype_id",
matcat_id AS "va_matcat_id",
pnom  AS "va_cat_pnom",
pnom  AS "va_cat_dnom",
epa_type,
sector_id, 
state,
state_type,
annotation AS va_annotation, 
observ AS va_observ, 
comment AS va_comment,
gis_length AS va_gis_length,
custom_length AS va_custom_length,
dma_id,
presszonecat_id,
soilcat_id AS va_soilcat_id,
function_type AS va_function_type,
category_type AS va_category_type,
fluid_type AS va_fluid_type,
location_type AS va_location_type,
workcat_id AS va_workcat_id,
workcat_id_end AS va_workcat_id_end,
buildercat_id AS va_buildercat_id,
builtdate AS va_builtdate,
enddate AS va_enddate,
ownercat_id AS va_ownercat_id,
muni_id AS va_muni_id,
postcode AS va_postcode,
streetaxis_id AS va_streetaxis_id,
postnumber AS va_postnumber,
streetaxis2_id AS va_streetaxis2_id,
postnumber2 AS va_postnumber2,
descript AS va_descript,
link AS va_link,
verified,
the_geom,
undelete,
label_x AS va_label_x,
label_y AS va_label_y,
label_rotation AS va_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
num_value AS va_num_value
FROM v_arc 
	JOIN man_varc ON man_varc.arc_id=v_arc.arc_id;


DROP VIEW IF EXISTS v_edit_man_hydrant CASCADE;
CREATE OR REPLACE VIEW v_edit_man_hydrant AS 
SELECT 
v_node.node_id,
code AS hy_code,
elevation AS hy_elevation,
depth AS hy_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS hy_cat_matcat_id,
cat_pnom AS hy_cat_pnom,
cat_dnom AS hy_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS hy_annotation,
observ AS hy_observ,
comment AS hy_comment,
dma_id,
presszonecat_id,
soilcat_id AS hy_soilcat_id,
function_type AS hy_function_type,
category_type AS hy_category_type,
fluid_type AS hy_fluid_type,
location_type AS hy_location_type,
workcat_id AS hy_workcat_id,
workcat_id_end AS hy_workcat_id_end,
buildercat_id AS hy_buildercat_id,
builtdate AS hy_builtdate,
enddate AS hy_enddate,
ownercat_id AS hy_ownercat_id,
muni_id AS hy_muni_id,
postcode AS hy_postcode,
streetaxis_id AS hy_streetaxis_id,
postnumber AS hy_postnumber,
streetaxis2_id AS hy_streetaxis2_id,
postnumber2 AS hy_postnumber2,
descript AS hy_descript,
cat_svg AS hy_cat_svg,
rotation AS hy_rotation,
link AS hy_link,
verified,
the_geom,
undelete,
label_x AS hy_label_x,
label_y AS hy_label_y,
label_rotation AS hy_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
num_value AS hy_num_value,
hemisphere AS hy_hemisphere,
man_hydrant.fire_code AS hy_fire_code,
man_hydrant.communication AS hy_communication,
man_hydrant.valve AS hy_valve,
man_hydrant.valve_diam AS hy_valve_diam
FROM v_node
    JOIN man_hydrant ON man_hydrant.node_id = v_node.node_id;  

	
	 
DROP VIEW IF EXISTS v_edit_man_junction CASCADE;
CREATE OR REPLACE VIEW v_edit_man_junction AS 
SELECT 
v_node.node_id,
code AS jt_code,
elevation AS jt_elevation,
depth AS jt_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS jt_cat_matcat_id,
cat_pnom AS jt_cat_pnom,
cat_dnom AS jt_cat_dnom,
epa_type,
sector_id,
"state",
state_type,
annotation AS jt_annotation,
observ AS jt_observ,
comment AS jt_comment,
dma_id,
presszonecat_id,
soilcat_id AS jt_soilcat_id,
function_type AS jt_function_type,
category_type AS jt_category_type,
fluid_type AS jt_fluid_type,
location_type AS jt_location_type,
workcat_id AS jt_workcat_id,
workcat_id_end AS jt_workcat_id_end,
buildercat_id AS jt_buildercat_id,
builtdate AS jt_builtdate,
enddate AS jt_enddate,
ownercat_id AS jt_ownercat_id,
muni_id AS jt_muni_id,
postcode AS jt_postcode,
streetaxis_id AS jt_streetaxis_id,
postnumber AS jt_postnumber,
streetaxis2_id AS jt_streetaxis2_id,
postnumber2 AS jt_postnumber2,
descript AS jt_descript,
cat_svg AS jt_cat_svg,
rotation AS jt_rotation,
label_x AS jt_label_x,
label_y AS jt_label_y,
label_rotation AS jt_label_rotation,
link AS jt_link,
verified,
the_geom,
undelete,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as jt_hemisphere,
num_value as jt_num_value
FROM v_node
	JOIN man_junction ON v_node.node_id = man_junction.node_id;

  

	 
DROP VIEW IF EXISTS v_edit_man_manhole CASCADE;
CREATE OR REPLACE VIEW v_edit_man_manhole AS 
SELECT 
v_node.node_id,
code AS mh_code,
elevation AS mh_elevation,
depth AS mh_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS mh_cat_matcat_id,
cat_pnom AS mh_cat_pnom,
cat_dnom AS mh_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS mh_annotation,
observ AS mh_observ,
comment AS mh_comment,
dma_id,
presszonecat_id,
soilcat_id AS mh_soilcat_id,
function_type AS mh_function_type,
category_type AS mh_category_type,
fluid_type AS mh_fluid_type,
location_type AS mh_location_type,
workcat_id AS mh_workcat_id,
workcat_id_end AS mh_workcat_id_end,
buildercat_id AS mh_buildercat_id,
builtdate AS mh_builtdate,
enddate AS mh_enddate,
ownercat_id AS mh_ownercat_id,
muni_id AS mh_muni_id,
postcode AS mh_postcode,
streetaxis_id AS mh_streetaxis_id,
postnumber AS mh_postnumber,
streetaxis2_id AS mh_streetaxis2_id,
postnumber2 AS mh_postnumber2,
descript AS mh_descript,
cat_svg AS mh_cat_svg,
rotation AS mh_rotation,
label_x AS mh_label_x,
label_y AS mh_label_y,
label_rotation AS mh_label_rotation,
link AS mh_link,
verified,
the_geom,
undelete,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as mh_hemisphere,
num_value as mh_num_value,
man_manhole.name as mh_name
FROM v_node
	JOIN man_manhole ON v_node.node_id = man_manhole.node_id;



DROP VIEW IF EXISTS v_edit_man_meter CASCADE;
CREATE OR REPLACE VIEW v_edit_man_meter AS 
SELECT 
v_node.node_id,
code AS mt_code,
elevation AS mt_elevation,
depth AS mt_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS mt_cat_matcat_id,
cat_pnom AS mt_cat_pnom,
cat_dnom AS mt_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS mt_annotation,
observ AS mt_observ,
comment AS mt_comment,
dma_id,
presszonecat_id,
soilcat_id AS mt_soilcat_id,
function_type AS mt_function_type,
category_type AS mt_category_type,
fluid_type AS mt_fluid_type,
location_type AS mt_location_type,
workcat_id AS mt_workcat_id,
workcat_id_end AS mt_workcat_id_end,
buildercat_id AS mt_buildercat_id,
builtdate AS mt_builtdate,
enddate AS mt_enddate,
ownercat_id AS mt_ownercat_id,
muni_id AS mt_muni_id,
postcode AS mt_postcode,
streetaxis_id AS mt_streetaxis_id,
postnumber AS mt_postnumber,
streetaxis2_id AS mt_streetaxis2_id,
postnumber2 AS mt_postnumber2,
descript AS mt_descript,
cat_svg AS mt_cat_svg,
rotation AS mt_rotation,
link AS mt_link,
label_x AS mt_label_x,
label_y AS mt_label_y,
label_rotation AS mt_label_rotation,
verified,
the_geom,
undelete,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as mt_hemisphere,
num_value as mt_num_value
FROM v_node 
	JOIN man_meter ON man_meter.node_id = v_node.node_id;

	
	 
DROP VIEW IF EXISTS v_edit_man_pump CASCADE;
CREATE OR REPLACE VIEW v_edit_man_pump AS 
SELECT 
v_node.node_id,
code AS pm_code,
elevation AS pm_elevation,
depth AS pm_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS pm_cat_matcat_id,
cat_pnom AS pm_cat_pnom,
cat_dnom AS pm_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS pm_annotation,
observ AS pm_observ,
comment AS pm_comment,
dma_id,
presszonecat_id,
soilcat_id AS pm_soilcat_id,
function_type AS pm_function_type,
category_type AS pm_category_type,
fluid_type AS pm_fluid_type,
location_type AS pm_location_type,
workcat_id AS pm_workcat_id,
workcat_id_end AS pm_workcat_id_end,
buildercat_id AS pm_buildercat_id,
builtdate AS pm_builtdate,
enddate AS pm_enddate,
ownercat_id AS pm_ownercat_id,
muni_id AS pm_muni_id,
postcode AS pm_postcode,
streetaxis_id AS pm_streetaxis_id,
postnumber AS pm_postnumber,
streetaxis2_id AS pm_streetaxis2_id,
postnumber2 AS pm_postnumber2,
descript AS pm_descript,
cat_svg AS pm_cat_svg,
rotation AS pm_rotation,
label_x AS pm_label_x,
label_y AS pm_label_y,
label_rotation AS pm_label_rotation,
link AS pm_link,
verified,
the_geom,
undelete,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as pm_hemisphere,
num_value as pm_num_value,
man_pump.max_flow AS pm_max_flow,
man_pump.min_flow AS pm_min_flow,
man_pump.nom_flow AS pm_nom_flow,
man_pump."power" AS pm_power,
man_pump.pressure AS pm_pressure,
man_pump.elev_height AS pm_elev_height,
man_pump.name AS pm_name
FROM v_node
	JOIN man_pump ON man_pump.node_id = v_node.node_id;

	
	
DROP VIEW IF EXISTS v_edit_man_reduction CASCADE;
CREATE OR REPLACE VIEW v_edit_man_reduction AS 
SELECT 
v_node.node_id,
code AS rd_code,
elevation AS rd_elevation,
depth AS rd_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS rd_cat_matcat_id,
cat_pnom AS rd_cat_pnom,
cat_dnom AS rd_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS rd_annotation,
observ AS rd_observ,
comment AS rd_comment,
dma_id,
presszonecat_id,
soilcat_id AS rd_soilcat_id,
function_type AS rd_function_type,
category_type AS rd_category_type,
fluid_type AS rd_fluid_type,
location_type AS rd_location_type,
workcat_id AS rd_workcat_id,
workcat_id_end AS rd_workcat_id_end,
buildercat_id AS rd_buildercat_id,
builtdate AS rd_builtdate,
enddate AS rd_enddate,
ownercat_id AS rd_ownercat_id,
muni_id AS rd_muni_id,
postcode AS rd_postcode,
streetaxis_id AS rd_streetaxis_id,
postnumber AS rd_postnumber,
streetaxis2_id AS rd_streetaxis2_id,
postnumber2 AS rd_postnumber2,
descript AS rd_descript,
cat_svg AS rd_cat_svg,
rotation AS rd_rotation,
link AS rd_link,
verified,
the_geom,
undelete,
label_x AS rd_label_x,
label_y AS rd_label_y,
label_rotation AS rd_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as rd_hemisphere,
num_value as rd_num_value,
man_reduction.diam1 AS rd_diam1,
man_reduction.diam2 AS rd_diam2
FROM v_node 
	JOIN man_reduction ON man_reduction.node_id = v_node.node_id;
	


DROP VIEW IF EXISTS v_edit_man_source CASCADE;
CREATE OR REPLACE VIEW v_edit_man_source AS 
SELECT 
v_node.node_id,
code AS so_code,
elevation AS so_elevation,
depth AS so_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS so_cat_matcat_id,
cat_pnom AS so_cat_pnom,
cat_dnom AS so_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS so_annotation,
observ AS so_observ,
comment AS so_comment,
dma_id,
presszonecat_id,
soilcat_id AS so_soilcat_id,
function_type AS so_function_type,
category_type AS so_category_type,
fluid_type AS so_fluid_type,
location_type AS so_location_type,
workcat_id AS so_workcat_id,
workcat_id_end AS so_workcat_id_end,
buildercat_id AS so_buildercat_id,
builtdate AS so_builtdate,
enddate AS so_enddate,
ownercat_id AS so_ownercat_id,
muni_id AS so_muni_id,
postcode AS so_postcode,
streetaxis_id AS so_streetaxis_id,
postnumber AS so_postnumber,
streetaxis2_id AS so_streetaxis2_id,
postnumber2 AS so_postnumber2,
descript AS so_descript,
cat_svg AS so_cat_svg,
rotation AS so_rotation,
link AS so_link,
verified,
the_geom,
undelete,
label_x AS so_label_x,
label_y AS so_label_y,
label_rotation AS so_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere AS so_hemisphere,
num_value as so_num_value,
man_source.name AS so_name
FROM v_node
	JOIN man_source ON v_node.node_id = man_source.node_id;
 
	 
DROP VIEW IF EXISTS v_edit_man_valve CASCADE;
CREATE OR REPLACE VIEW v_edit_man_valve AS 
SELECT 
v_node.node_id,
code AS vl_code,
elevation AS vl_elevation,
depth AS vl_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS vl_cat_matcat_id,
cat_pnom AS vl_cat_pnom,
cat_dnom AS vl_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS vl_annotation,
observ AS vl_observ,
comment AS vl_comment,
dma_id,
presszonecat_id,
soilcat_id AS vl_soilcat_id,
function_type AS vl_function_type,
category_type AS vl_category_type,
fluid_type AS vl_fluid_type,
location_type AS vl_location_type,
workcat_id AS vl_workcat_id,
workcat_id_end AS vl_workcat_id_end,
buildercat_id AS vl_buildercat_id,
builtdate AS vl_builtdate,
enddate AS vl_enddate,
ownercat_id AS vl_ownercat_id,
muni_id AS vl_muni_id,
postcode AS vl_postcode,
streetaxis_id AS vl_streetaxis_id,
postnumber AS vl_postnumber,
streetaxis2_id AS vl_streetaxis2_id,
postnumber2 AS vl_postnumber2,
descript AS vl_descript,
cat_svg AS vl_cat_svg,
rotation AS vl_rotation,
link AS vl_link,
verified,
the_geom,
undelete,
label_x AS vl_label_x,
label_y AS vl_label_y,
label_rotation AS vl_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as vl_hemisphere,
num_value as vl_num_value,
man_valve.closed AS vl_closed,
man_valve.broken AS vl_broken,
man_valve.buried AS vl_buried,
man_valve.irrigation_indicator AS vl_irrigation_indicator,
man_valve.pression_entry AS vl_pression_entry,
man_valve.pression_exit AS vl_pression_exit,
man_valve.depth_valveshaft AS vl_depth_valveshaft,
man_valve.regulator_situation AS vl_regulator_situation,
man_valve.regulator_location AS vl_regulator_location,
man_valve.regulator_observ AS vl_regulator_observ,
man_valve.lin_meters AS vl_lin_meters,
man_valve.exit_type AS vl_exit_type,
man_valve.exit_code AS vl_exit_code,
man_valve.drive_type AS vl_drive_type,
man_valve.valve_diam AS vl_valve_diam,
man_valve.cat_valve2 AS vl_cat_valve2,
man_valve.arc_id AS vl_arc_id
FROM v_node
	JOIN man_valve ON man_valve.node_id = v_node.node_id;

	 
DROP VIEW IF EXISTS v_edit_man_waterwell CASCADE;
CREATE OR REPLACE VIEW v_edit_man_waterwell AS 
SELECT
v_node.node_id,
code AS ww_code,
elevation AS ww_elevation,
depth AS ww_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS ww_cat_matcat_id,
cat_pnom AS ww_cat_pnom,
cat_dnom AS ww_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS ww_annotation,
observ AS ww_observ,
comment AS ww_comment,
dma_id,
presszonecat_id,
soilcat_id AS ww_soilcat_id,
function_type AS ww_function_type,
category_type AS ww_category_type,
fluid_type AS ww_fluid_type,
location_type AS ww_location_type,
workcat_id AS ww_workcat_id,
workcat_id_end AS ww_workcat_id_end,
buildercat_id AS ww_buildercat_id,
builtdate AS ww_builtdate,
enddate AS ww_enddate, 
ownercat_id AS ww_ownercat_id,
muni_id AS ww_muni_id,
postcode AS ww_postcode,
streetaxis_id AS ww_streetaxis_id,
postnumber AS ww_postnumber,
streetaxis2_id AS ww_streetaxis2_id,
postnumber2 AS ww_postnumber2,
descript AS ww_descript,
cat_svg AS ww_cat_svg,
rotation AS ww_rotation,
link AS ww_link,
verified,
the_geom,
undelete,
label_x AS ww_label_x,
label_y AS ww_label_y,
label_rotation AS ww_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as ww_hemisphere,
num_value as ww_num_value,
man_waterwell.name AS ww_name
FROM v_node
	JOIN man_waterwell ON v_node.node_id = man_waterwell.node_id;
	
   
DROP VIEW IF EXISTS v_edit_man_tank CASCADE;
CREATE OR REPLACE VIEW v_edit_man_tank AS 
SELECT 
v_node.node_id,
code AS tk_code,
elevation AS tk_elevation,
depth AS tk_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS tk_cat_matcat_id,
cat_pnom AS tk_cat_pnom,
cat_dnom AS tk_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS tk_annotation,
observ AS tk_observ,
comment AS tk_comment,
dma_id,
presszonecat_id,
soilcat_id AS tk_soilcat_id,
function_type AS tk_function_type,
category_type AS tk_category_type,
fluid_type AS tk_fluid_type,
location_type AS tk_location_type,
workcat_id AS tk_workcat_id,
workcat_id_end AS tk_workcat_id_end,
buildercat_id AS tk_buildercat_id,
builtdate AS tk_builtdate,
enddate AS tk_enddate,
ownercat_id AS tk_ownercat_id,
muni_id AS tk_muni_id,
postcode AS tk_postcode,
streetaxis_id AS tk_streetaxis_id,
postnumber AS tk_postnumber,
streetaxis2_id AS tk_streetaxis2_id,
postnumber2 AS tk_postnumber2,
descript AS tk_descript,
cat_svg AS tk_cat_svg,
rotation AS tk_rotation,
link AS tk_link,
verified,
the_geom,
undelete,
label_x AS tk_label_x,
label_y AS tk_label_y,
label_rotation AS tk_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as tk_hemisphere,
num_value as tk_num_value,
man_tank.pol_id AS tk_pol_id,
man_tank.vmax AS tk_vmax,
man_tank.vutil AS tk_vutil,
man_tank.area AS tk_area,
man_tank.chlorination AS tk_chlorination,
man_tank.name AS tk_name
FROM v_node
	JOIN man_tank ON man_tank.node_id = v_node.node_id;
	
	
DROP VIEW IF EXISTS v_edit_man_tank_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_tank_pol AS 
SELECT 
v_node.node_id,
code AS tk_code,
elevation AS tk_elevation,
depth AS tk_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS tk_cat_matcat_id,
cat_pnom AS tk_cat_pnom,
cat_dnom AS tk_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS tk_annotation,
observ AS tk_observ,
comment AS tk_comment,
dma_id,
presszonecat_id,
soilcat_id AS tk_soilcat_id,
function_type AS tk_function_type,
category_type AS tk_category_type,
fluid_type AS tk_fluid_type,
location_type AS tk_location_type,
workcat_id AS tk_workcat_id,
workcat_id_end AS tk_workcat_id_end,
buildercat_id AS tk_buildercat_id,
builtdate AS tk_builtdate,
enddate AS tk_enddate,
ownercat_id AS tk_ownercat_id,
muni_id AS tk_muni_id,
postcode AS tk_postcode,
streetaxis_id AS tk_streetaxis_id,
postnumber AS tk_postnumber,
streetaxis2_id AS tk_streetaxis2_id,
postnumber2 AS tk_postnumber2,
descript AS tk_descript,
cat_svg AS tk_cat_svg,
rotation AS tk_rotation,
link AS tk_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS tk_label_x,
label_y AS tk_label_y,
label_rotation AS tk_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as tk_hemisphere,
num_value as tk_num_value,
man_tank.pol_id AS tk_pol_id,
man_tank.vmax AS tk_vmax,
man_tank.vutil AS tk_vutil,
man_tank.area AS tk_area,
man_tank.chlorination AS tk_chlorination,
man_tank.name AS tk_name
FROM v_node
	JOIN man_tank ON man_tank.node_id = v_node.node_id
	JOIN polygon ON polygon.pol_id=man_tank.pol_id;
	

DROP VIEW IF EXISTS v_edit_man_filter CASCADE;
CREATE OR REPLACE VIEW v_edit_man_filter AS 
SELECT
v_node.node_id,
code AS fl_code,
elevation AS fl_elevation,
depth AS fl_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS fl_cat_matcat_id,
cat_pnom AS fl_cat_pnom,
cat_dnom AS fl_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS fl_annotation,
observ AS fl_observ,
comment AS fl_comment,
dma_id,
presszonecat_id,
soilcat_id AS fl_soilcat_id,
function_type AS fl_function_type,
category_type AS fl_category_type,
fluid_type AS fl_fluid_type,
location_type AS fl_location_type,
workcat_id AS fl_workcat_id,
workcat_id_end AS fl_workcat_id_end,
buildercat_id AS fl_buildercat_id,
builtdate AS fl_builtdate,
enddate AS fl_enddate,
ownercat_id AS fl_ownercat_id,
muni_id AS fl_muni_id,
postcode AS fl_postcode,
streetaxis_id AS fl_streetaxis_id,
postnumber AS fl_postnumber,
streetaxis2_id AS fl_streetaxis2_id,
postnumber2 AS fl_postnumber2,
descript AS fl_descript,
cat_svg AS fl_cat_svg,
rotation AS fl_rotation,
label_x AS fl_label_x,
label_y AS fl_label_y,
label_rotation AS fl_label_rotation,
link AS fl_link,
verified,
the_geom,
undelete,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as fl_hemisphere,
num_value as fl_num_value
FROM v_node
	JOIN man_filter ON v_node.node_id = man_filter.node_id;
	
	
DROP VIEW IF EXISTS v_edit_man_register CASCADE;
CREATE OR REPLACE VIEW v_edit_man_register AS 
SELECT 
v_node.node_id,
code AS rg_code,
elevation AS rg_elevation,
depth AS rg_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS rg_cat_matcat_id,
cat_pnom AS rg_cat_pnom,
cat_dnom AS rg_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS rg_annotation,
observ AS rg_observ,
comment AS rg_comment,
dma_id,
presszonecat_id,
soilcat_id AS rg_soilcat_id,
function_type AS rg_function_type,
category_type AS rg_category_type,
fluid_type AS rg_fluid_type,
location_type AS rg_location_type,
workcat_id AS rg_workcat_id,
workcat_id_end AS rg_workcat_id_end,
buildercat_id AS rg_buildercat_id,
builtdate AS rg_builtdate,
enddate AS rg_enddate,
ownercat_id AS rg_ownercat_id,
muni_id AS rg_muni_id,
postcode AS rg_postcode,
streetaxis_id AS rg_streetaxis_id,
postnumber AS rg_postnumber,
streetaxis2_id AS rg_streetaxis2_id,
postnumber2 AS rg_postnumber2,
descript AS rg_descript,
cat_svg AS rg_cat_svg,
rotation AS rg_rotation,
link AS rg_link,
verified,
the_geom,
undelete,
label_x AS rg_label_x,
label_y AS rg_label_y,
label_rotation AS rg_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as rg_hemisphere,
num_value as rg_num_value,
man_register.pol_id AS rg_pol_id
FROM v_node
	JOIN man_register ON v_node.node_id = man_register.node_id;
	

	
DROP VIEW IF EXISTS v_edit_man_register_pol CASCADE;
CREATE OR REPLACE VIEW v_edit_man_register_pol AS 
SELECT 
v_node.node_id,
code AS rg_code,
elevation AS rg_elevation,
depth AS rg_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS rg_cat_matcat_id,
cat_pnom AS rg_cat_pnom,
cat_dnom AS rg_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS rg_annotation,
observ AS rg_observ,
comment AS rg_comment,
dma_id,
presszonecat_id,
soilcat_id AS rg_soilcat_id,
function_type AS rg_function_type,
category_type AS rg_category_type,
fluid_type AS rg_fluid_type,
location_type AS rg_location_type,
workcat_id AS rg_workcat_id,
workcat_id_end AS rg_workcat_id_end,
buildercat_id AS rg_buildercat_id,
builtdate AS rg_builtdate,
enddate AS rg_enddate,
ownercat_id AS rg_ownercat_id,
muni_id AS rg_muni_id,
postcode AS rg_postcode,
streetaxis_id AS rg_streetaxis_id,
postnumber AS rg_postnumber,
streetaxis2_id AS rg_streetaxis2_id,
postnumber2 AS rg_postnumber2,
descript AS rg_descript,
cat_svg AS rg_cat_svg,
rotation AS rg_rotation,
link AS rg_link,
verified,
polygon.the_geom,
v_node.undelete,
label_x AS rg_label_x,
label_y AS rg_label_y,
label_rotation AS rg_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as rg_hemisphere,
num_value as rg_num_value,
man_register.pol_id AS rg_pol_id
FROM v_node
	JOIN man_register ON v_node.node_id = man_register.node_id
	JOIN polygon ON polygon.pol_id = man_register.pol_id;
	
	
DROP VIEW IF EXISTS v_edit_man_netwjoin CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netwjoin AS 
SELECT 
v_node.node_id,
code AS nw_code,
elevation AS nw_elevation,
depth AS nw_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS nw_cat_matcat_id,
cat_pnom AS nw_cat_pnom,
cat_dnom AS nw_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS nw_annotation,
observ AS nw_observ,
comment AS nw_comment,
dma_id,
presszonecat_id,
soilcat_id AS nw_soilcat_id,
function_type AS nw_function_type,
category_type AS nw_category_type,
fluid_type AS nw_fluid_type,
location_type AS nw_location_type,
workcat_id AS nw_workcat_id,
workcat_id_end AS nw_workcat_id_end,
buildercat_id AS nw_buildercat_id,
builtdate AS nw_builtdate,
enddate AS nw_enddate,
ownercat_id AS nw_ownercat_id,
muni_id AS nw_muni_id,
postcode AS nw_postcode,
streetaxis_id AS nw_streetaxis_id,
postnumber AS nw_postnumber,
streetaxis2_id AS nw_streetaxis2_id,
postnumber2 AS nw_postnumber2,
descript AS nw_descript,
cat_svg AS nw_cat_svg,
rotation AS nw_rotation,
link AS nw_link,
verified,
v_node.the_geom,
undelete,
label_x AS nw_label_x,
label_y AS nw_label_y,
label_rotation AS nw_label_rotation,
publish,
inventory,
macrodma_id,
v_node.expl_id,
hemisphere as nw_hemisphere,
num_value as nw_num_value,
man_netwjoin.customer_code as nw_customer_code,
man_netwjoin.top_floor AS nw_top_floor,
man_netwjoin.cat_valve AS nw_cat_valve
FROM v_node
	JOIN man_netwjoin ON v_node.node_id = man_netwjoin.node_id;

	
	
DROP VIEW IF EXISTS v_edit_man_flexunion CASCADE;
CREATE OR REPLACE VIEW v_edit_man_flexunion AS 
SELECT 
v_node.node_id,
code AS fu_code,
elevation AS fu_elevation,
depth AS fu_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS fu_cat_matcat_id,
cat_pnom AS fu_cat_pnom,
cat_dnom AS fu_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS fu_annotation,
observ AS fu_observ,
comment AS fu_comment,
dma_id,
presszonecat_id,
soilcat_id AS fu_soilcat_id,
function_type AS fu_function_type,
category_type AS fu_category_type,
fluid_type AS fu_fluid_type,
location_type AS fu_location_type,
workcat_id AS fu_workcat_id,
workcat_id_end AS fu_workcat_id_end,
buildercat_id AS fu_buildercat_id,
builtdate AS fu_builtdate,
enddate AS fu_enddate,
ownercat_id AS fu_ownercat_id,
muni_id AS fu_muni_id,
postcode AS fu_postcode,
streetaxis_id AS fu_streetaxis_id,
postnumber AS fu_postnumber,
streetaxis2_id AS fu_streetaxis2_id,
postnumber2 AS fu_postnumber2,
descript AS fu_descript,
cat_svg AS fu_cat_svg,
rotation AS fu_rotation,
link AS fu_link,
verified,
the_geom,
undelete,
label_x AS fu_label_x,
label_y AS fu_label_y,
label_rotation AS fu_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as fu_hemisphere,
num_value as fu_num_value
FROM v_node
	JOIN man_flexunion ON v_node.node_id = man_flexunion.node_id;
	
	
DROP VIEW IF EXISTS v_edit_man_wtp CASCADE;
CREATE OR REPLACE VIEW v_edit_man_wtp AS 
SELECT 
v_node.node_id,
code AS wt_code,
elevation AS wt_elevation,
depth AS wt_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS wt_cat_matcat_id,
cat_pnom AS wt_cat_pnom,
cat_dnom AS wt_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS wt_annotation,
observ AS wt_observ,
comment AS wt_comment,
dma_id,
presszonecat_id,
soilcat_id AS wt_soilcat_id,
function_type AS wt_function_type,
category_type AS wt_category_type,
fluid_type AS wt_fluid_type,
location_type AS wt_location_type,
workcat_id AS wt_workcat_id,
workcat_id_end AS wt_workcat_id_end,
buildercat_id AS wt_buildercat_id,
builtdate AS wt_builtdate,
enddate AS wt_enddate,
ownercat_id AS wt_ownercat_id,
muni_id AS wt_muni_id,
postcode AS wt_postcode,
streetaxis_id AS wt_streetaxis_id,
postnumber AS wt_postnumber,
streetaxis2_id AS wt_streetaxis2_id,
postnumber2 AS wt_postnumber2,
descript AS wt_descript,
cat_svg AS wt_cat_svg,
rotation AS wt_rotation,
link AS wt_link,
verified,
the_geom,
undelete,
label_x AS wt_label_x,
label_y AS wt_label_y,
label_rotation AS wt_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as wt_hemisphere,
num_value as wt_num_value,
man_wtp.name AS wt_name
FROM v_node
	JOIN man_wtp ON v_node.node_id = man_wtp.node_id;
	
	
DROP VIEW IF EXISTS v_edit_man_expansiontank CASCADE;
CREATE OR REPLACE VIEW v_edit_man_expansiontank AS 
SELECT 
v_node.node_id,
code AS ex_code,
elevation AS ex_elevation,
depth AS ex_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS ex_cat_matcat_id,
cat_pnom AS ex_cat_pnom,
cat_dnom AS ex_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS ex_annotation,
observ AS ex_observ,
comment AS ex_comment,
dma_id,
presszonecat_id,
soilcat_id AS ex_soilcat_id,
function_type AS ex_function_type,
category_type AS ex_category_type,
fluid_type AS ex_fluid_type,
location_type AS ex_location_type,
workcat_id AS ex_workcat_id,
workcat_id_end AS ex_workcat_id_end,
buildercat_id AS ex_buildercat_id,
builtdate AS ex_builtdate,
enddate AS ex_enddate,
ownercat_id AS ex_ownercat_id,
muni_id AS ex_muni_id,
postcode AS ex_postcode,
streetaxis_id AS ex_streetaxis_id,
postnumber AS ex_postnumber,
streetaxis2_id AS ex_streetaxis2_id,
postnumber2 AS ex_postnumber2,
descript AS ex_descript,
cat_svg AS ex_cat_svg,
rotation AS ex_rotation,
link AS ex_link,
verified,
the_geom,
undelete,
label_x AS ex_label_x,
label_y AS ex_label_y,
label_rotation AS ex_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as ex_hemisphere,
num_value as ex_num_value
FROM v_node
	JOIN man_expansiontank ON v_node.node_id = man_expansiontank .node_id;
	
	

DROP VIEW IF EXISTS v_edit_man_netsamplepoint CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netsamplepoint AS 
SELECT 
v_node.node_id,
code AS ns_code,
elevation AS ns_elevation,
depth AS ns_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS ns_cat_matcat_id,
cat_pnom AS ns_cat_pnom,
cat_dnom AS ns_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS ns_annotation,
observ AS ns_observ,
comment AS ns_comment,
dma_id,
presszonecat_id,
soilcat_id AS ns_soilcat_id,
function_type AS ns_function_type,
category_type AS ns_category_type,
fluid_type AS ns_fluid_type,
location_type AS ns_location_type,
workcat_id AS ns_workcat_id,
workcat_id_end AS ns_workcat_id_end,
buildercat_id AS ns_buildercat_id,
builtdate AS ns_builtdate,
enddate AS ns_enddate,
ownercat_id AS ns_ownercat_id,
muni_id AS ns_muni_id,
postcode AS ns_postcode,
streetaxis_id AS ns_streetaxis_id,
postnumber AS ns_postnumber,
streetaxis2_id AS ns_streetaxis2_id,
postnumber2 AS ns_postnumber2,
descript AS ns_descript,
cat_svg AS ns_cat_svg,
rotation AS ns_rotation,
link AS ns_link,
verified,
the_geom,
undelete,
label_x AS ns_label_x,
label_y AS ns_label_y,
label_rotation AS ns_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as ns_hemisphere,
num_value as ns_num_value,
man_netsamplepoint.lab_code AS ns_lab_code
FROM v_node
	JOIN man_netsamplepoint ON v_node.node_id = man_netsamplepoint .node_id;
	
	

DROP VIEW IF EXISTS v_edit_man_netelement CASCADE;
CREATE OR REPLACE VIEW v_edit_man_netelement AS 
SELECT 
v_node.node_id,
code AS ne_code,
elevation AS ne_elevation,
depth AS ne_depth,
nodetype_id,
nodecat_id,
cat_matcat_id AS ne_cat_matcat_id,
cat_pnom AS ne_cat_pnom,
cat_dnom AS ne_cat_dnom,
epa_type,
sector_id,
state,
state_type,
annotation AS ne_annotation,
observ AS ne_observ,
comment AS ne_comment,
dma_id,
presszonecat_id,
soilcat_id AS ne_soilcat_id,
function_type AS ne_function_type,
category_type AS ne_category_type,
fluid_type AS ne_fluid_type,
location_type AS ne_location_type,
workcat_id AS ne_workcat_id,
workcat_id_end AS ne_workcat_id_end,
buildercat_id AS ne_buildercat_id,
builtdate AS ne_builtdate,
enddate AS ne_enddate,
ownercat_id AS ne_ownercat_id,
muni_id AS ne_muni_id,
postcode AS ne_postcode,
streetaxis_id AS ne_streetaxis_id,
postnumber AS ne_postnumber,
streetaxis2_id AS ne_streetaxis2_id,
postnumber2 AS ne_postnumber2,
descript AS ne_descript,
cat_svg AS ne_cat_svg,
rotation AS ne_rotation,
link AS ne_link,
verified,
the_geom,
undelete,
label_x AS ne_label_x,
label_y AS ne_label_y,
label_rotation AS ne_label_rotation,
publish,
inventory,
macrodma_id,
expl_id,
hemisphere as ne_hemisphere,
num_value as ne_num_value,
man_netelement.serial_number as ne_serial_number
FROM v_node
	JOIN man_netelement ON v_node.node_id = man_netelement .node_id;
	

	
DROP  VIEW  IF EXISTS v_edit_link;
CREATE OR REPLACE VIEW v_edit_link AS 
 SELECT link.link_id,
    link.feature_type,
    link.feature_id,
    link.exit_type,
	link.exit_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.sector_id
            ELSE vnode.sector_id
        END AS sector_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.dma_id
            ELSE vnode.dma_id
        END AS dma_id,
        CASE
            WHEN link.feature_type::text = 'CONNEC'::text THEN connec.expl_id
            ELSE vnode.expl_id
        END AS expl_id,
	link.state,
    st_length2d(link.the_geom) AS gis_length,
    link.userdefined_geom,
    link.the_geom
   FROM selector_expl,
    selector_state,
    link
     LEFT JOIN connec ON link.feature_id::text = connec.connec_id::text AND link.feature_type::text = 'CONNEC'::text
     LEFT JOIN vnode ON link.feature_id::text = vnode.vnode_id::text AND link.feature_type::text = 'VNODE'::text
  WHERE connec.expl_id = selector_expl.expl_id AND selector_expl.cur_user = "current_user"()::text AND connec.state = selector_state.state_id AND selector_state.cur_user = "current_user"()::text OR vnode.expl_id = selector_expl.expl_id AND selector_expl.cur_user = "current_user"()::text AND vnode.state = selector_state.state_id AND selector_state.cur_user = "current_user"()::text;


  
DROP VIEW IF EXISTS v_edit_vnode CASCADE;
CREATE VIEW v_edit_vnode AS SELECT
vnode_id,
vnode_type,
vnode.sector_id,
vnode.dma_id,
vnode.state,
annotation,
vnode.the_geom,
vnode.expl_id
FROM selector_expl, selector_state, vnode
	WHERE 
	vnode.expl_id=selector_expl.expl_id AND selector_expl.cur_user="current_user"() AND
	vnode.state=selector_state.state_id AND selector_state.cur_user="current_user"();


	

DROP VIEW IF EXISTS v_edit_pond CASCADE;
CREATE VIEW v_edit_pond AS 
SELECT
pond_id,
connec_id,
pond.dma_id,
dma.macrodma_id,
pond."state",
pond.the_geom,
pond.expl_id
FROM selector_expl,pond
LEFT JOIN dma ON pond.dma_id = dma.dma_id
WHERE ((pond.expl_id)=(selector_expl.expl_id)
AND selector_expl.cur_user="current_user"());


DROP VIEW IF EXISTS v_edit_pool CASCADE;
CREATE VIEW v_edit_pool AS 
SELECT
pool_id,
connec_id,
pool.dma_id,
dma.macrodma_id,
pool."state",
pool.the_geom,
pool.expl_id
FROM selector_expl,pool
LEFT JOIN dma ON pool.dma_id = dma.dma_id
WHERE ((pool.expl_id)=(selector_expl.expl_id)
AND selector_expl.cur_user="current_user"());



DROP VIEW IF EXISTS v_value_cat_connec CASCADE;
CREATE OR REPLACE VIEW v_value_cat_connec AS 
 SELECT cat_connec.id,
    cat_connec.connectype_id AS connec_type,
    connec_type.type
   FROM cat_connec
     JOIN connec_type ON connec_type.id::text = cat_connec.connectype_id::text;


 
DROP VIEW IF EXISTS v_value_cat_connec CASCADE;
CREATE OR REPLACE VIEW v_value_cat_connec AS 
 SELECT cat_node.id,
    cat_node.nodetype_id,
    node_type.type
   FROM cat_node
     JOIN node_type ON node_type.id::text = cat_node.nodetype_id::text;

